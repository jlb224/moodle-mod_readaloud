{"version":3,"file":"ttbrowserrec.min.js","sources":["../src/ttbrowserrec.js"],"sourcesContent":["/* jshint ignore:start */\r\ndefine(['jquery', 'core/log'], function ($, log) {\r\n\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    log.debug('mod_readaloud browser speech rec: initialising');\r\n\r\n    return {\r\n\r\n        recognition: null,\r\n        recognizing: false,\r\n        final_transcript: '',\r\n        interim_transcript: '',\r\n        start_timestamp: 0,\r\n        lang: 'en-US',\r\n        interval: 0,\r\n        browsertype: '',\r\n\r\n\r\n        //for making multiple instances\r\n        clone: function () {\r\n            return $.extend(true, {}, this);\r\n        },\r\n\r\n        will_work_ok: function(opts){\r\n            //let's check if we are in an iframe\r\n            var is_iframe = false;\r\n            if (window.self !== window.top) {\r\n                is_iframe = true;\r\n            }\r\n\r\n            //is mobileapp ?\r\n            var is_mobileapp = false;\r\n            if (navigator.userAgent.indexOf(\"MoodleMobile\") > -1) {\r\n                is_mobileapp = true;\r\n            }\r\n\r\n            //Brave looks like it does speech rec, but it doesn't\r\n            var brave = typeof navigator.brave !== 'undefined';\r\n            if(brave){\r\n                this.browsertype = 'brave';\r\n            }\r\n\r\n            //Edge may or may not work, but its hard to tell from the browser agent\r\n            var edge = navigator.userAgent.toLowerCase().indexOf(\"edg/\") > -1;\r\n           if(edge && this.browsertype === ''){\r\n               this.browsertype = 'edge';\r\n           }\r\n\r\n            //Safari may or may not work, but its hard to tell from the browser agent\r\n            var has_chrome = navigator.userAgent.indexOf('Chrome') > -1;\r\n            var has_safari = navigator.userAgent.indexOf(\"Safari\") > -1;\r\n            var is_ios = (navigator.userAgent.indexOf(\"iPhone\") > -1 ||\r\n                navigator.userAgent.indexOf(\"iPad\") > -1);\r\n            var safari = has_safari && !has_chrome;\r\n            if(safari && this.browsertype === ''){\r\n                this.browsertype = 'safari';\r\n            }\r\n\r\n            //This is feature detection, and for chrome it can be trusted.\r\n            var hasspeechrec = ('webkitSpeechRecognition' in window || 'SpeechRecognition' in window);\r\n            if(hasspeechrec && this.browsertype === '' && has_chrome){\r\n                this.browsertype = 'chrome';\r\n            }\r\n\r\n            //This is feature detection, and for chrome it can be trusted.\r\n            // The others might say they do speech rec, but that does not mean it works\r\n            // we know safari in webapp does not so we nix that here\r\n            if(is_mobileapp && is_ios) {\r\n                return false;\r\n            } else if(this.browsertype === 'brave'){\r\n                return false;\r\n            } else {\r\n                return hasspeechrec;\r\n            }\r\n        },\r\n\r\n        init: function (lang,waveheight,uniqueid) {\r\n            var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\r\n            this.recognition = new SpeechRecognition();\r\n            this.recognition.continuous = true;\r\n            this.recognition.interimResults = true;\r\n            this.lang = lang;\r\n            this.waveHeight = waveheight;\r\n            this.uniqueid = uniqueid;\r\n            this.prepare_html();\r\n            this.register_events();\r\n        },\r\n\r\n        prepare_html: function(){\r\n            this.canvas =$('#' + this.uniqueid + \"_waveform\");\r\n            this.canvasCtx = this.canvas[0].getContext(\"2d\");\r\n        },\r\n\r\n        set_grammar: function (grammar) {\r\n            var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;\r\n            if (SpeechGrammarList) {\r\n                var speechRecognitionList = new SpeechGrammarList();\r\n                speechRecognitionList.addFromString(grammar, 1);\r\n                this.recognition.grammars = speechRecognitionList;\r\n            }\r\n        },\r\n\r\n        start: function () {\r\n            var that =this;\r\n\r\n            //If we already started ignore this\r\n            if (this.recognizing) {\r\n                return;\r\n            }\r\n            this.recognizing = true;\r\n            this.final_transcript = '';\r\n            this.interim_transcript = '';\r\n            this.recognition.lang = this.lang;//select_dialect.value;\r\n            this.recognition.start();\r\n            this.start_timestamp = Date.now();//event.timeStamp;\r\n            that.onstart();\r\n\r\n\r\n            //kick off animation\r\n            that.interval = setInterval(function() {\r\n                that.drawWave();\r\n            }, 100);\r\n        },\r\n\r\n        stop: function () {\r\n            var that=this;\r\n            this.recognizing = false;\r\n            this.recognition.stop();\r\n            clearInterval(this.interval);\r\n            this.canvasCtx.clearRect(0, 0, this.canvas.width()*2, this.waveHeight * 2);\r\n            setTimeout(function() {\r\n                that.onfinalspeechcapture(that.final_transcript);\r\n            }, 1000);\r\n            this.onend();\r\n        },\r\n\r\n        register_events: function () {\r\n\r\n            var recognition = this.recognition;\r\n            var that = this;\r\n\r\n            recognition.onerror = function (event) {\r\n                if (event.error == 'no-speech') {\r\n                    log.debug('info_no_speech');\r\n                }\r\n                if (event.error == 'audio-capture') {\r\n                    log.debug('info_no_microphone');\r\n                }\r\n                if (event.error == 'not-allowed') {\r\n                    if (event.timeStamp - that.start_timestamp < 100) {\r\n                        log.debug('info_blocked');\r\n                    } else {\r\n                        log.debug('info_denied');\r\n                    }\r\n                }\r\n                that.onerror({error: {name: event.error}});\r\n            };\r\n\r\n            recognition.onend = function () {\r\n                if(that.recognizing){\r\n                    that.recognition.start();\r\n                }\r\n\r\n            };\r\n\r\n            recognition.onresult = function (event) {\r\n                for (var i = event.resultIndex; i < event.results.length; ++i) {\r\n                    if (event.results[i].isFinal) {\r\n                        that.final_transcript += event.results[i][0].transcript;\r\n                    } else {\r\n                        var provisional_transcript = that.final_transcript + event.results[i][0].transcript;\r\n                        //the interim and final events do not arrive in sequence, we dont want the length going down, its weird\r\n                        //so just dont respond when the sequence is wonky\r\n                        if(provisional_transcript.length < that.interim_transcript.length){\r\n                            return;\r\n                        }else{\r\n                            that.interim_transcript = provisional_transcript;\r\n                        }\r\n                        that.oninterimspeechcapture(that.interim_transcript);\r\n                    }\r\n                }\r\n\r\n            };\r\n        },//end of register events\r\n\r\n        drawWave: function() {\r\n\r\n            var width = this.canvas.width() * 2;\r\n            var bufferLength=4096;\r\n\r\n            this.canvasCtx.fillStyle = 'white';\r\n            this.canvasCtx.fillRect(0, 0, width, this.waveHeight*2);\r\n\r\n            this.canvasCtx.lineWidth = 5;\r\n            this.canvasCtx.strokeStyle = 'gray';\r\n            this.canvasCtx.beginPath();\r\n\r\n            var slicewaveWidth = width / bufferLength;\r\n            var x = 0;\r\n\r\n            for (var i = 0; i < bufferLength; i++) {\r\n\r\n                var v = ((Math.random() * 64) + 96) / 128.0;\r\n                var y = v * this.waveHeight;\r\n\r\n                if (i === 0) {\r\n                    // this.canvasCtx.moveTo(x, y);\r\n                } else {\r\n                    this.canvasCtx.lineTo(x, y);\r\n                }\r\n                x += slicewaveWidth;\r\n            }\r\n\r\n            this.canvasCtx.lineTo(width, this.waveHeight);\r\n            this.canvasCtx.stroke();\r\n\r\n        },\r\n\r\n        onstart: function () {\r\n            log.debug('started');\r\n        },\r\n        onerror: function () {\r\n            log.debug('error');\r\n        },\r\n        onend: function () {\r\n            log.debug('end');\r\n        },\r\n        onfinalspeechcapture: function (speechtext) {\r\n            log.debug(speechtext);\r\n        },\r\n        oninterimspeechcapture: function (speechtext) {\r\n            // log.debug(speechtext);\r\n        }\r\n\r\n    };//end of returned object\r\n});//total end"],"names":["define","$","log","debug","recognition","recognizing","final_transcript","interim_transcript","start_timestamp","lang","interval","browsertype","clone","extend","this","will_work_ok","opts","window","self","top","is_mobileapp","navigator","userAgent","indexOf","brave","toLowerCase","has_chrome","has_safari","is_ios","hasspeechrec","init","waveheight","uniqueid","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","waveHeight","prepare_html","register_events","canvas","canvasCtx","getContext","set_grammar","grammar","SpeechGrammarList","webkitSpeechGrammarList","speechRecognitionList","addFromString","grammars","start","that","Date","now","onstart","setInterval","drawWave","stop","clearInterval","clearRect","width","setTimeout","onfinalspeechcapture","onend","onerror","event","error","timeStamp","name","onresult","i","resultIndex","results","length","isFinal","transcript","provisional_transcript","oninterimspeechcapture","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","slicewaveWidth","x","y","Math","random","lineTo","stroke","speechtext"],"mappings":"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"}