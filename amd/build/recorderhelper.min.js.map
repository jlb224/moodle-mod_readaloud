{"version":3,"file":"recorderhelper.min.js","sources":["../src/recorderhelper.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_readaloud/cloudpoodllloader'], function ($, log, cloudpoodll) {\r\n    \"use strict\"; // jshint ;_;\r\n    /*\r\n    This file sets up the cloud poodll recorder and passes on events to registered handlers\r\n     */\r\n\r\n    log.debug('Readaloud helper: initialising');\r\n\r\n    return {\r\n\r\n        status: 'stopped',\r\n\r\n        init: function (opts, on_recording_start,\r\n                        on_recording_end,\r\n                        on_audio_processing,\r\n                        on_speech) {\r\n\r\n            var that = this;\r\n            var recid=opts['recorderid'];\r\n            cloudpoodll.init(recid,\r\n                function (message) {\r\n                    switch (message.type) {\r\n                        case 'recording':\r\n                            if (message.action === 'started') {\r\n                                that.startbuttonclick();\r\n                                on_recording_start(message);\r\n\r\n                            } else if (message.action === 'stopped') {\r\n                                that.stopbuttonclick();\r\n                                on_recording_end(message);\r\n                            }\r\n                            break;\r\n                        case 'awaitingprocessing':\r\n                            //awaitingprocessing fires often, but we only want to post once\r\n                            if (that.status !== 'posted') {\r\n                                on_audio_processing(message);\r\n                            }\r\n                            that.status = 'posted';\r\n                            break;\r\n                        case 'speech':\r\n                                on_speech(message);\r\n                            break;\r\n                        case 'error':\r\n                            alert('PROBLEM:' + message.message);\r\n                            break;\r\n                    }\r\n                }\r\n            );\r\n        },\r\n        stopbuttonclick: function () {\r\n            this.status = 'stopped';\r\n            //do something\r\n        },\r\n        startbuttonclick: function () {\r\n            this.status = 'started';\r\n            //do something\r\n        }\r\n\r\n    };//end of return value\r\n});"],"names":["define","$","log","cloudpoodll","debug","status","init","opts","on_recording_start","on_recording_end","on_audio_processing","on_speech","that","this","recid","message","type","action","startbuttonclick","stopbuttonclick","alert"],"mappings":"AAAAA,sCAAO,CAAC,SAAU,WAAY,oCAAoC,SAAUC,EAAGC,IAAKC,oBAMhFD,IAAIE,MAAM,kCAEH,CAEHC,OAAQ,UAERC,KAAM,SAAUC,KAAMC,mBACNC,iBACAC,oBACAC,eAERC,KAAOC,KACPC,MAAMP,KAAI,WACdJ,YAAYG,KAAKQ,OACb,SAAUC,gBACEA,QAAQC,UACP,YACsB,YAAnBD,QAAQE,QACRL,KAAKM,mBACLV,mBAAmBO,UAEO,YAAnBA,QAAQE,SACfL,KAAKO,kBACLV,iBAAiBM,oBAGpB,qBAEmB,WAAhBH,KAAKP,QACLK,oBAAoBK,SAExBH,KAAKP,OAAS,mBAEb,SACGM,UAAUI,mBAEb,QACDK,MAAM,WAAaL,QAAQA,cAM/CI,gBAAiB,gBACRd,OAAS,WAGlBa,iBAAkB,gBACTb,OAAS"}