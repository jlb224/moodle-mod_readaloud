{"version":3,"file":"ttwavencoder.min.js","sources":["../src/ttwavencoder.js"],"sourcesContent":["define(['jquery', 'core/log'], function ($, log) {\r\n    \"use strict\"; // jshint ;_;\r\n    /*\r\n    This file is the engine that drives audio rec and canvas drawing. TT Recorder is the just the glory kid\r\n     */\r\n\r\n    log.debug('TT Wav Encoder initialising');\r\n\r\n    return {\r\n\r\n\r\n        //for making multiple instances\r\n        clone: function () {\r\n            return $.extend(true, {}, this);\r\n        },\r\n\r\n        init: function(sampleRate, numChannels) {\r\n            this.sampleRate = sampleRate;\r\n            this.numChannels = numChannels;\r\n            this.numSamples = 0;\r\n            this.dataViews = [];\r\n        },\r\n\r\n        audioprocess: function(buffer) {\r\n            //this would be an event that occurs after recorder has stopped lets just ignore it\r\n            if(this.dataViews===undefined){\r\n                return;\r\n            }\r\n\r\n            var len = buffer[0].length,\r\n                nCh = this.numChannels,\r\n                view = new DataView(new ArrayBuffer(len * nCh * 2)),\r\n                offset = 0;\r\n            for (var i = 0; i < len; ++i) {\r\n                for (var ch = 0; ch < nCh; ++ch) {\r\n                    var x = buffer[ch][i] * 0x7fff;\r\n                    view.setInt16(offset, x < 0 ? Math.max(x, -0x8000) : Math.min(x, 0x7fff), true);\r\n                    offset += 2;\r\n                }\r\n            }\r\n            this.dataViews.push(view);\r\n            this.numSamples += len;\r\n        },\r\n\r\n        setString: function(view, offset, str) {\r\n            var len = str.length;\r\n            for (var i = 0; i < len; ++i) {\r\n                view.setUint8(offset + i, str.charCodeAt(i));\r\n            }\r\n        },\r\n\r\n        finish: function(mimeType) {\r\n\r\n            //this would be an event that occurs after recorder has stopped lets just ignore it\r\n            if(this.dataViews===undefined){\r\n                return;\r\n            }\r\n\r\n            var dataSize = this.numChannels * this.numSamples * 2;\r\n            var view = new DataView(new ArrayBuffer(44));\r\n            this.setString(view, 0, 'RIFF');\r\n            view.setUint32(4, 36 + dataSize, true);\r\n            this.setString(view, 8, 'WAVE');\r\n            this.setString(view, 12, 'fmt ');\r\n            view.setUint32(16, 16, true);\r\n            view.setUint16(20, 1, true);\r\n            view.setUint16(22, this.numChannels, true);\r\n            view.setUint32(24, this.sampleRate, true);\r\n            view.setUint32(28, this.sampleRate * 4, true);\r\n            view.setUint16(32, this.numChannels * 2, true);\r\n            view.setUint16(34, 16, true);\r\n            this.setString(view, 36, 'data');\r\n            view.setUint32(40, dataSize, true);\r\n            this.dataViews.unshift(view);\r\n            var blob = new Blob(this.dataViews, { type: 'audio/wav' });\r\n            this.cleanup();\r\n            return blob;\r\n        },\r\n\r\n        cancel: function() {\r\n            delete this.dataViews;\r\n        },\r\n\r\n        cleanup: function() {\r\n            this.cancel();\r\n        }\r\n\r\n     };//end of return value\r\n\r\n});"],"names":["define","$","log","debug","clone","extend","this","init","sampleRate","numChannels","numSamples","dataViews","audioprocess","buffer","undefined","len","length","nCh","view","DataView","ArrayBuffer","offset","i","ch","x","setInt16","Math","max","min","push","setString","str","setUint8","charCodeAt","finish","mimeType","dataSize","setUint32","setUint16","unshift","blob","Blob","type","cleanup","cancel"],"mappings":"AAAAA,oCAAO,CAAC,SAAU,aAAa,SAAUC,EAAGC,YAMxCA,IAAIC,MAAM,+BAEH,CAIHC,MAAO,kBACIH,EAAEI,QAAO,EAAM,GAAIC,OAG9BC,KAAM,SAASC,WAAYC,kBAClBD,WAAaA,gBACbC,YAAcA,iBACdC,WAAa,OACbC,UAAY,IAGrBC,aAAc,SAASC,gBAECC,IAAjBR,KAAKK,mBAIJI,IAAMF,OAAO,GAAGG,OAChBC,IAAMX,KAAKG,YACXS,KAAO,IAAIC,SAAS,IAAIC,YAAYL,IAAME,IAAM,IAChDI,OAAS,EACJC,EAAI,EAAGA,EAAIP,MAAOO,MAClB,IAAIC,GAAK,EAAGA,GAAKN,MAAOM,GAAI,KACzBC,EAAoB,MAAhBX,OAAOU,IAAID,GACnBJ,KAAKO,SAASJ,OAAQG,EAAI,EAAIE,KAAKC,IAAIH,GAAI,OAAUE,KAAKE,IAAIJ,EAAG,QAAS,GAC1EH,QAAU,OAGbV,UAAUkB,KAAKX,WACfR,YAAcK,MAGvBe,UAAW,SAASZ,KAAMG,OAAQU,aAC1BhB,IAAMgB,IAAIf,OACLM,EAAI,EAAGA,EAAIP,MAAOO,EACvBJ,KAAKc,SAASX,OAASC,EAAGS,IAAIE,WAAWX,KAIjDY,OAAQ,SAASC,kBAGOrB,IAAjBR,KAAKK,eAIJyB,SAAW9B,KAAKG,YAAcH,KAAKI,WAAa,EAChDQ,KAAO,IAAIC,SAAS,IAAIC,YAAY,UACnCU,UAAUZ,KAAM,EAAG,QACxBA,KAAKmB,UAAU,EAAG,GAAKD,UAAU,QAC5BN,UAAUZ,KAAM,EAAG,aACnBY,UAAUZ,KAAM,GAAI,QACzBA,KAAKmB,UAAU,GAAI,IAAI,GACvBnB,KAAKoB,UAAU,GAAI,GAAG,GACtBpB,KAAKoB,UAAU,GAAIhC,KAAKG,aAAa,GACrCS,KAAKmB,UAAU,GAAI/B,KAAKE,YAAY,GACpCU,KAAKmB,UAAU,GAAsB,EAAlB/B,KAAKE,YAAgB,GACxCU,KAAKoB,UAAU,GAAuB,EAAnBhC,KAAKG,aAAiB,GACzCS,KAAKoB,UAAU,GAAI,IAAI,QAClBR,UAAUZ,KAAM,GAAI,QACzBA,KAAKmB,UAAU,GAAID,UAAU,QACxBzB,UAAU4B,QAAQrB,UACnBsB,KAAO,IAAIC,KAAKnC,KAAKK,UAAW,CAAE+B,KAAM,0BACvCC,UACEH,OAGXI,OAAQ,kBACGtC,KAAKK,WAGhBgC,QAAS,gBACAC"}