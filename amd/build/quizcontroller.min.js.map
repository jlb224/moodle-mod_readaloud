{"version":3,"file":"quizcontroller.min.js","sources":["../src/quizcontroller.js"],"sourcesContent":["/* jshint ignore:start */\r\ndefine(['jquery', 'core/log','mod_readaloud/definitions','mod_readaloud/quizhelper','mod_readaloud/pollyhelper'], function($,  log, def,  quizhelper,polly) {\r\n\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    log.debug('ReadAloud Quiz Controller: initialising');\r\n\r\n    return {\r\n\r\n        cmid: null,\r\n        quizdata: null,\r\n        sorryboxid: null,\r\n        controls: null,\r\n\r\n        //pass in config, the jquery video/audio object, and a function to be called when conversion has finshed\r\n        init: function(props){\r\n            var dd = this;\r\n\r\n            //pick up opts from html\r\n            var theid='#amdopts_' + props.widgetid;\r\n            var configcontrol = $(theid).get(0);\r\n            if(configcontrol){\r\n                dd.quizdata = JSON.parse(configcontrol.value);\r\n                $(theid).remove();\r\n            }else{\r\n                //if there is no config we might as well give up\r\n                log.debug('Readaloud quiz Controller: No config found on page. Giving up.');\r\n                return;\r\n            }\r\n\r\n            dd.cmid = props.cmid;\r\n            dd.attemptid = 1;\r\n            dd.sorryboxid = props.widgetid + '_sorrybox';\r\n\r\n            polly.init(dd.quizdata.token,dd.quizdata.region,dd.quizdata.owner);\r\n\r\n            dd.process_html();\r\n            dd.register_events();\r\n            // OR to show quiz and no recorder do dd.doquizlayout\r\n            dd.doquizlayout();\r\n        },\r\n\r\n        process_html: function(){\r\n            var opts = this.quizdata;\r\n            // These css classes/ids are all passed in from php in\r\n            // renderer.php::fetch_activity_amd\r\n            var controls = {\r\n                errorcontainer: $('.' +  opts['errorcontainer']),\r\n                feedbackcontainer: $('.' +  opts['feedbackcontainer']),\r\n                instructionscontainer: $('.' +  opts['instructionscontainer']),\r\n                introbox: $('.' + 'mod_intro_box'),\r\n                modeimagecontainer: $('#' + opts['modeimagecontainer']),\r\n                placeholder: $('.mod_readaloud_placeholder'),\r\n                quizcontainer: $('.' +  opts['quizcontainer']),\r\n                smallreportcontainer: $('#' + opts['smallreportcontainer']),\r\n                startquizbutton: $('#' + opts['startquizbutton']),\r\n                wheretonextcontainer: $('.' +  opts['wheretonextcontainer']),\r\n            };\r\n            this.controls = controls;\r\n        },\r\n\r\n        register_events: function() {\r\n            var dd = this;\r\n\r\n            dd.controls.startquizbutton.click(function(e){\r\n                dd.doquizlayout();\r\n            });\r\n        },\r\n\r\n        doquizlayout: function(){\r\n            var dd = this;\r\n\r\n            dd.controls.instructionscontainer.hide();\r\n            dd.controls.smallreportcontainer.hide();\r\n            dd.controls.modeimagecontainer.removeClass('preview landr readaloud readaloudshadow report');\r\n            dd.controls.modeimagecontainer.addClass('quiz');\r\n\r\n            // Set up the quiz.\r\n           // quizhelper.onSubmit = function(returndata){m.dofinishedreadinglayout(returndata);};\r\n            quizhelper.init(dd.controls.quizcontainer,\r\n                this.quizdata,\r\n                this.cmid,\r\n                this.attemptid,\r\n                polly);\r\n\r\n            // Show the quiz.\r\n            dd.controls.placeholder.hide();\r\n            dd.controls.quizcontainer.show();\r\n        },\r\n\r\n        doerrorlayout: function(){\r\n            this.controls.errorcontainer.show();\r\n            this.controls.wheretonextcontainer.show();\r\n        }\r\n    };// End of returned object.\r\n});// Total end.\r\n"],"names":["define","$","log","def","quizhelper","polly","debug","cmid","quizdata","sorryboxid","controls","init","props","dd","this","theid","widgetid","configcontrol","get","JSON","parse","value","remove","attemptid","token","region","owner","process_html","register_events","doquizlayout","opts","errorcontainer","feedbackcontainer","instructionscontainer","introbox","modeimagecontainer","placeholder","quizcontainer","smallreportcontainer","startquizbutton","wheretonextcontainer","click","e","hide","removeClass","addClass","show","doerrorlayout"],"mappings":"AACAA,sCAAO,CAAC,SAAU,WAAW,4BAA4B,2BAA2B,8BAA8B,SAASC,EAAIC,IAAKC,IAAMC,WAAWC,cAIjJH,IAAII,MAAM,2CAEH,CAEHC,KAAM,KACNC,SAAU,KACVC,WAAY,KACZC,SAAU,KAGVC,KAAM,SAASC,WACPC,GAAKC,KAGLC,MAAM,YAAcH,MAAMI,SAC1BC,cAAgBhB,EAAEc,OAAOG,IAAI,GAC9BD,eACCJ,GAAGL,SAAWW,KAAKC,MAAMH,cAAcI,OACvCpB,EAAEc,OAAOO,SAObT,GAAGN,KAAOK,MAAML,KAChBM,GAAGU,UAAY,EACfV,GAAGJ,WAAaG,MAAMI,SAAW,YAEjCX,MAAMM,KAAKE,GAAGL,SAASgB,MAAMX,GAAGL,SAASiB,OAAOZ,GAAGL,SAASkB,OAE5Db,GAAGc,eACHd,GAAGe,kBAEHf,GAAGgB,gBAbC3B,IAAII,MAAM,mEAgBlBqB,aAAc,eACNG,KAAOhB,KAAKN,SAGZE,SAAW,CACXqB,eAAgB9B,EAAE,IAAO6B,KAAI,gBAC7BE,kBAAmB/B,EAAE,IAAO6B,KAAI,mBAChCG,sBAAuBhC,EAAE,IAAO6B,KAAI,uBACpCI,SAAUjC,EAAE,kBACZkC,mBAAoBlC,EAAE,IAAM6B,KAAI,oBAChCM,YAAanC,EAAE,8BACfoC,cAAepC,EAAE,IAAO6B,KAAI,eAC5BQ,qBAAsBrC,EAAE,IAAM6B,KAAI,sBAClCS,gBAAiBtC,EAAE,IAAM6B,KAAI,iBAC7BU,qBAAsBvC,EAAE,IAAO6B,KAAI,4BAElCpB,SAAWA,UAGpBkB,gBAAiB,eACTf,GAAKC,KAETD,GAAGH,SAAS6B,gBAAgBE,OAAM,SAASC,GACvC7B,GAAGgB,mBAIXA,aAAc,eACNhB,GAAKC,KAETD,GAAGH,SAASuB,sBAAsBU,OAClC9B,GAAGH,SAAS4B,qBAAqBK,OACjC9B,GAAGH,SAASyB,mBAAmBS,YAAY,kDAC3C/B,GAAGH,SAASyB,mBAAmBU,SAAS,QAIxCzC,WAAWO,KAAKE,GAAGH,SAAS2B,cACxBvB,KAAKN,SACLM,KAAKP,KACLO,KAAKS,UACLlB,OAGJQ,GAAGH,SAAS0B,YAAYO,OACxB9B,GAAGH,SAAS2B,cAAcS,QAG9BC,cAAe,gBACNrC,SAASqB,eAAee,YACxBpC,SAAS8B,qBAAqBM"}