{"version":3,"sources":["../src/modelaudiokaraoke.js"],"names":["define","$","log","def","debug","controls","breaks","endwordnumber","currentstartbreak","modeling","cd","audioplayerclass","wordplayerclass","wordclass","spaceclass","endspaceclass","passagecontainer","activesentence","stopbutton","playbutton","init","opts","JSON","parse","set_breaks","register_controls","eachword","length","register_events","sort_breaks","number_breaks","sort","a","b","audiotime","that","i","breaknumber","pause_audio","trigger","play_audio","fetch_audio_url","audioplayer","attr","eachspace","eachwordorspace","aplayer","on","play","pause","wordnumber","parseInt","nearest_start_break","currentTime","ended","removeClass","onended","onpause","ontimeupdate","startbreak","nextbreak","finishedsentence","text","previousstartbreak","thewordnumber","addClass","on_reach_audio_break","sentence","oldbreak","newbreak"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'mod_readaloud/definitions'], function($, log, def) {\n  \"use strict\"; // jshint ;_;\n  /*\n  This file runs preview and shadow and L-and-R modes, highlighting text as the player reaches it.\n   */\n\n  log.debug('Model Audio Karaoke: initialising');\n\n  return {\n    controls: {},\n    breaks: [],\n    endwordnumber: 0,\n    currentstartbreak: false,\n    modeling: false,\n\n    //class definitions\n    cd: {\n      audioplayerclass: def.audioplayerclass,\n      wordplayerclass: def.wordplayerclass,\n      wordclass: def.wordclass,\n      spaceclass: def.spaceclass,\n      endspaceclass: def.endspaceclass,\n      passagecontainer: def.passagecontainer,\n      activesentence: def.activesentence,\n      stopbutton: 'mod_readaloud_button_stop',\n      playbutton: 'mod_readaloud_button_play'\n    },\n\n    //init the module\n    init: function(opts) {\n      if (opts.breaks) {\n        var breaks = JSON.parse(opts.breaks);\n        this.set_breaks(breaks);\n      }\n      if (opts.modeling) {\n        this.modeling = true;\n      }\n      if (opts.audioplayerclass) {\n        this.cd.audioplayerclass = opts.audioplayerclass;\n      }\n\n      //register the controls\n      this.register_controls();\n\n      //register the end word number\n      this.endwordnumber = this.controls.eachword.length;\n\n      //register the events\n      this.register_events();\n    },\n\n    set_breaks: function(breaks) {\n      this.breaks = breaks;\n      this.sort_breaks();\n      this.number_breaks();\n    },\n\n    sort_breaks: function() {\n      this.breaks.sort(function(a, b) {\n        return a.audiotime - b.audiotime\n      });\n    },\n\n    number_breaks: function(){\n      var that=this;\n        for (var i = 0; i < that.breaks.length; i++) {\n           that.breaks[i].breaknumber=i+1;\n        }\n    },\n\n    pause_audio: function() {\n      this.controls.stopbutton.trigger('click');\n    },\n\n    play_audio: function() {\n      this.controls.playbutton.trigger('click');\n    },\n\n    fetch_audio_url: function() {\n      return this.controls.audioplayer.attr('src');\n    },\n\n    //load all the controls so we do not have to do it later\n    register_controls: function() {\n      this.controls.audioplayer = $('#' + this.cd.audioplayerclass);\n      this.controls.eachword = $('.' + this.cd.wordclass);\n      this.controls.eachspace = $('.' + this.cd.spaceclass);\n      this.controls.eachwordorspace = $('.' + this.cd.spaceclass + ',.' + this.cd.wordclass);\n      this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\n      this.controls.stopbutton = $('#' + this.cd.stopbutton);\n      this.controls.playbutton = $('#' + this.cd.playbutton);\n    },\n\n    //attach the various event handlers we need\n    register_events: function() {\n      var that = this;\n\n      // Get the audio element\n      var aplayer = this.controls.audioplayer[0];\n\n      this.controls.playbutton.on('click', function() {\n        aplayer.play();\n      });\n\n      this.controls.stopbutton.on('click', function() {\n        aplayer.pause();\n      });\n\n      //if we are not modeling we want to jump to the clicked location\n      //if we are modeling the meaning of a click is to place a marker, so we do not want to jump\n      if (!this.modeling) {\n        this.controls.eachwordorspace.on('click', function() {\n          var wordnumber = parseInt($(this).attr('data-wordnumber'));\n          var nearest_start_break = false;\n          for (var i = 0; i < that.breaks.length; i++) {\n            if (that.breaks[i].wordnumber < wordnumber) {\n              nearest_start_break = that.breaks[i];\n            } else {\n              //exit the loop;\n              break;\n            }\n          }\n          if (!nearest_start_break) {\n            //start from beginning OR do nothing\n          } else {\n            aplayer.pause();\n            aplayer.currentTime = nearest_start_break.audiotime;\n            aplayer.play();\n          }\n        }); //end of eachwordorspace\n      } //end of if not modeling\n\n      //Player events (onended, onpause, ontimeupdate)\n      var ended = function() {\n        that.controls.eachword.removeClass(that.cd.activesentence);\n        that.controls.eachspace.removeClass(that.cd.activesentence);\n        that.currentstartbreak = false;\n      };\n\n      aplayer.onended = ended;\n      aplayer.onpause = ended;\n\n      aplayer.ontimeupdate = function() {\n        var currentTime = aplayer.currentTime;\n        var startbreak = false;\n        var nextbreak = false;\n        for (var i = 0; i < that.breaks.length; i++) {\n\n          //if this is the last marked break (ie flow till end)\n          if (currentTime >= that.breaks[i].audiotime && i + 1 === that.breaks.length) {\n            startbreak = that.breaks[i];\n            nextbreak = {\n              wordnumber: that.endwordnumber + 1,\n              audiotime: 0\n            };\n            //if its just between two breaks (yay)\n          } else if (currentTime >= that.breaks[i].audiotime && currentTime < that.breaks[i + 1].audiotime) {\n            startbreak = that.breaks[i];\n            nextbreak = that.breaks[i + 1];\n            break;\n            //this is the first section\n          } else if (i === 0 && currentTime < that.breaks[i].audiotime && currentTime > 0) {\n            startbreak = {\n              wordnumber: 0,\n              audiotime: 0,\n              breaknumber: 0\n            };\n            nextbreak = that.breaks[i];\n\n          }\n        }\n        //if the current break changed since last time, we do not want to do anything\n        // (on first time through we want to flag  \"changed\" so that is why a false current startbreak goes to \"changed\"\n\n        if (that.currentstartbreak === false || startbreak.wordnumber !== that.currentstartbreak.wordnumber) {\n          var finishedsentence = $('.' + that.cd.activesentence).text();\n          that.previousstartbreak = that.currentstartbreak;\n          that.currentstartbreak = startbreak;\n          that.controls.eachword.removeClass(that.cd.activesentence);\n          that.controls.eachspace.removeClass(that.cd.activesentence);\n          if (startbreak !== false && nextbreak !== false) {\n            for (var thewordnumber = startbreak.wordnumber + 1; thewordnumber <= nextbreak.wordnumber; thewordnumber++) {\n              $('#' + that.cd.spaceclass + '_' + thewordnumber).addClass((that.cd.activesentence));\n              $('#' + that.cd.wordclass + '_' + thewordnumber).addClass((that.cd.activesentence));\n            }\n          }\n          that.on_reach_audio_break(finishedsentence, that.previousstartbreak, that.currentstartbreak);\n        }\n      };\n    }, //end of register events\n\n\n    on_reach_audio_break: function(sentence, oldbreak, newbreak) {\n      log.debug(sentence);\n      log.debug(oldbreak);\n      log.debug(newbreak);\n    }\n\n  }; //end of return value\n});"],"file":"modelaudiokaraoke.min.js"}