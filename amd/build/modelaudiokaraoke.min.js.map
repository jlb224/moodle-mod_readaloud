{"version":3,"sources":["../src/modelaudiokaraoke.js"],"names":["define","$","log","def","debug","controls","breaks","endwordnumber","currentstartbreak","cd","audioplayerclass","wordplayerclass","wordclass","spaceclass","endspaceclass","passagecontainer","activesentence","init","opts","JSON","parse","register_controls","eachword","length","register_events","set_breaks","sort_breaks","sort","a","b","audiotime","audioplayer","eachspace","that","aplayer","ended","removeClass","onended","onpause","ontimeupdate","currentTime","startbreak","nextbreak","i","wordnumber","thewordnumber","addClass"],"mappings":"AAAAA,OAAM,mCAAC,CAAC,QAAD,CAAW,UAAX,CAAsB,2BAAtB,CAAD,CAAqD,SAAUC,CAAV,CAAaC,CAAb,CAAkBC,CAAlB,CAAuB,CAC9E,aAKAD,CAAG,CAACE,KAAJ,CAAU,kCAAV,EAEA,MAAO,CACHC,QAAQ,CAAE,EADP,CAEHC,MAAM,CAAE,EAFL,CAGHC,aAAa,CAAE,CAHZ,CAIHC,iBAAiB,GAJd,CAOHC,EAAE,CAAE,CACAC,gBAAgB,CAAEP,CAAG,CAACO,gBADtB,CAEAC,eAAe,CAAER,CAAG,CAACQ,eAFrB,CAGAC,SAAS,CAAET,CAAG,CAACS,SAHf,CAIAC,UAAU,CAAEV,CAAG,CAACU,UAJhB,CAKAC,aAAa,CAAEX,CAAG,CAACW,aALnB,CAMAC,gBAAgB,CAAEZ,CAAG,CAACY,gBANtB,CAOAC,cAAc,CAAEb,CAAG,CAACa,cAPpB,CAPD,CAkBHC,IAAI,CAAE,cAASC,CAAT,CAAc,CAChB,GAAGA,CAAI,CAACZ,MAAR,CAAgB,CACZ,KAAKA,MAAL,CAAYa,IAAI,CAACC,KAAL,CAAWF,CAAI,CAACZ,MAAhB,CACf,CACD,GAAGY,CAAI,CAACR,gBAAR,CAA0B,CACtB,KAAKD,EAAL,CAAQC,gBAAR,CAAyBQ,CAAI,CAACR,gBACjC,CAGD,KAAKW,iBAAL,GAGA,KAAKd,aAAL,CAAqB,KAAKF,QAAL,CAAciB,QAAd,CAAuBC,MAA5C,CAGA,KAAKC,eAAL,EACH,CAlCE,CAoCHC,UAAU,CAAE,oBAASnB,CAAT,CAAgB,CACxB,KAAKA,MAAL,CAAYA,CAAZ,CACA,KAAKoB,WAAL,EACH,CAvCE,CAyCHA,WAAW,CAAE,sBAAU,CACnB,KAAKpB,MAAL,CAAYqB,IAAZ,CAAiB,SAASC,CAAT,CAAYC,CAAZ,CAAc,CAAC,MAAOD,CAAAA,CAAC,CAACE,SAAF,CAAcD,CAAC,CAACC,SAAU,CAAjE,CACH,CA3CE,CA8CHT,iBAAiB,CAAE,4BAAU,CACzB,KAAKhB,QAAL,CAAc0B,WAAd,CAA4B9B,CAAC,CAAC,IAAM,KAAKQ,EAAL,CAAQC,gBAAf,CAA7B,CACA,KAAKL,QAAL,CAAciB,QAAd,CAAyBrB,CAAC,CAAC,IAAM,KAAKQ,EAAL,CAAQG,SAAf,CAA1B,CACA,KAAKP,QAAL,CAAc2B,SAAd,CAA0B/B,CAAC,CAAC,IAAM,KAAKQ,EAAL,CAAQI,UAAf,CAA3B,CACA,KAAKR,QAAL,CAAcU,gBAAd,CAAiCd,CAAC,CAAC,IAAM,KAAKQ,EAAL,CAAQM,gBAAf,CACrC,CAnDE,CAsDHS,eAAe,CAAE,0BAAW,IACpBS,CAAAA,CAAI,CAAG,IADa,CAIpBC,CAAO,CAAG,KAAK7B,QAAL,CAAc0B,WAAd,CAA0B,CAA1B,CAJU,CAOpBI,CAAK,CAAG,UAAU,CAClBF,CAAI,CAAC5B,QAAL,CAAciB,QAAd,CAAuBc,WAAvB,CAAmCH,CAAI,CAACxB,EAAL,CAAQO,cAA3C,EACAiB,CAAI,CAAC5B,QAAL,CAAc2B,SAAd,CAAwBI,WAAxB,CAAoCH,CAAI,CAACxB,EAAL,CAAQO,cAA5C,EACAiB,CAAI,CAACzB,iBAAL,GACH,CAXuB,CAaxB0B,CAAO,CAACG,OAAR,CAAiBF,CAAjB,CACAD,CAAO,CAACI,OAAR,CAAiBH,CAAjB,CAEAD,CAAO,CAACK,YAAR,CAAuB,UAAY,CAI/B,OAHIC,CAAAA,CAAW,CAAGN,CAAO,CAACM,WAG1B,CAFIC,CAAU,GAEd,CADIC,CAAS,GACb,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGV,CAAI,CAAC3B,MAAL,CAAYiB,MAAhC,CAAwCoB,CAAC,EAAzC,CAA6C,CAEzC,GAAIH,CAAW,EAAIP,CAAI,CAAC3B,MAAL,CAAYqC,CAAZ,EAAeb,SAA9B,EAA2Ca,CAAC,CAAG,CAAJ,GAAUV,CAAI,CAAC3B,MAAL,CAAYiB,MAArE,CAA6E,CACzEkB,CAAU,CAAGR,CAAI,CAAC3B,MAAL,CAAYqC,CAAZ,CAAb,CACAD,CAAS,CAAG,CAACE,UAAU,CAAEX,CAAI,CAAC1B,aAAL,CAAqB,CAAlC,CAAqCuB,SAAS,CAAE,CAAhD,CAEf,CAJD,IAIO,IAAIU,CAAW,EAAIP,CAAI,CAAC3B,MAAL,CAAYqC,CAAZ,EAAeb,SAA9B,EAA2CU,CAAW,CAAGP,CAAI,CAAC3B,MAAL,CAAYqC,CAAC,CAAG,CAAhB,EAAmBb,SAAhF,CAA2F,CAC9FW,CAAU,CAAGR,CAAI,CAAC3B,MAAL,CAAYqC,CAAZ,CAAb,CACAD,CAAS,CAAGT,CAAI,CAAC3B,MAAL,CAAYqC,CAAC,CAAG,CAAhB,CAAZ,CACA,KAEH,CALM,IAKA,IAAO,CAAJ,EAAAA,CAAC,EAAQH,CAAW,CAAGP,CAAI,CAAC3B,MAAL,CAAYqC,CAAZ,EAAeb,SAAtC,EAAiE,CAAd,CAAAU,CAAtD,CAAsE,CACzEC,CAAU,CAAG,CAACG,UAAU,CAAE,CAAb,CAAgBd,SAAS,CAAE,CAA3B,CAAb,CACAY,CAAS,CAAGT,CAAI,CAAC3B,MAAL,CAAYqC,CAAZ,CAEf,CACJ,CAED,KAAIV,CAAI,CAACzB,iBAAL,EAA0BiC,CAA9B,EAGO,CACHR,CAAI,CAACzB,iBAAL,CAAyBiC,CAAzB,CACAR,CAAI,CAAC5B,QAAL,CAAciB,QAAd,CAAuBc,WAAvB,CAAmCH,CAAI,CAACxB,EAAL,CAAQO,cAA3C,EACAiB,CAAI,CAAC5B,QAAL,CAAc2B,SAAd,CAAwBI,WAAxB,CAAoCH,CAAI,CAACxB,EAAL,CAAQO,cAA5C,EACA,GAAI,KAAAyB,CAAU,EAAc,KAAAC,CAA5B,CAAiD,CAC7C,IAAK,GAAIG,CAAAA,CAAa,CAAGJ,CAAU,CAACG,UAAX,CAAsB,CAA/C,CAAkDC,CAAa,EAAIH,CAAS,CAACE,UAA7E,CAAyFC,CAAa,EAAtG,CAA0G,CACtG5C,CAAC,CAAC,IAAMgC,CAAI,CAACxB,EAAL,CAAQI,UAAd,CAA2B,GAA3B,CAAiCgC,CAAlC,CAAD,CAAkDC,QAAlD,CAA4Db,CAAI,CAACxB,EAAL,CAAQO,cAApE,EACAf,CAAC,CAAC,IAAMgC,CAAI,CAACxB,EAAL,CAAQG,SAAd,CAA0B,GAA1B,CAAgCiC,CAAjC,CAAD,CAAiDC,QAAjD,CAA2Db,CAAI,CAACxB,EAAL,CAAQO,cAAnE,CACH,CACJ,CACJ,CACJ,CACJ,CA3GE,CA8GV,CAtHK,CAAN","sourcesContent":["define(['jquery', 'core/log','mod_readaloud/definitions'], function ($, log, def) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file helps you get Polly URLs at runtime\n     */\n\n    log.debug('Model Audio helper: initialising');\n\n    return {\n        controls: {},\n        breaks: [],\n        endwordnumber: 0,\n        currentstartbreak: false,\n\n        //class definitions\n        cd: {\n            audioplayerclass: def.audioplayerclass,\n            wordplayerclass: def.wordplayerclass,\n            wordclass: def.wordclass,\n            spaceclass: def.spaceclass,\n            endspaceclass: def.endspaceclass,\n            passagecontainer: def.passagecontainer,\n            activesentence: def.activesentence\n        },\n\n        //init the module\n        init: function(opts){\n            if(opts.breaks) {\n                this.breaks=JSON.parse(opts.breaks);\n            }\n            if(opts.audioplayerclass) {\n                this.cd.audioplayerclass=opts.audioplayerclass;\n            }\n\n            //register the controls\n            this.register_controls();\n\n            //register the end word number\n            this.endwordnumber = this.controls.eachword.length;\n\n            //register the events\n            this.register_events();\n        },\n\n        set_breaks: function(breaks){\n            this.breaks=breaks;\n            this.sort_breaks();\n        },\n\n        sort_breaks: function(){\n            this.breaks.sort(function(a, b){return a.audiotime - b.audiotime});\n        },\n\n        //load all the controls so we do not have to do it later\n        register_controls: function(){\n            this.controls.audioplayer = $('#' + this.cd.audioplayerclass);\n            this.controls.eachword = $('.' + this.cd.wordclass);\n            this.controls.eachspace = $('.' + this.cd.spaceclass);\n            this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\n        },\n\n        //attach the various event handlers we need\n        register_events: function() {\n            var that = this;\n\n            // Get the audio element\n            var aplayer = this.controls.audioplayer[0];\n\n            //Player events (onended, onpause, ontimeupdate)\n            var ended = function(){\n                that.controls.eachword.removeClass(that.cd.activesentence);\n                that.controls.eachspace.removeClass(that.cd.activesentence);\n                that.currentstartbreak = false;\n            };\n\n            aplayer.onended= ended;\n            aplayer.onpause= ended;\n\n            aplayer.ontimeupdate = function () {\n                var currentTime = aplayer.currentTime;\n                var startbreak = false;\n                var nextbreak = false;\n                for (var i = 0; i < that.breaks.length; i++) {\n                    //if this is the last marked break (ie flow till end)\n                    if (currentTime >= that.breaks[i].audiotime && i + 1 === that.breaks.length) {\n                        startbreak = that.breaks[i];\n                        nextbreak = {wordnumber: that.endwordnumber + 1, audiotime: 0};\n                        //if its just between two breaks (yay)\n                    } else if (currentTime >= that.breaks[i].audiotime && currentTime < that.breaks[i + 1].audiotime) {\n                        startbreak = that.breaks[i];\n                        nextbreak = that.breaks[i + 1];\n                        break;\n                     //this is the first section\n                    } else if(i===0 && currentTime < that.breaks[i].audiotime && currentTime > 0){\n                        startbreak = {wordnumber: 0, audiotime: 0};\n                        nextbreak = that.breaks[i];\n\n                    }\n                }\n                //nothing changed since last time\n                if (that.currentstartbreak == startbreak) {\n                    //do nothing\n                    //oooh, new current break!!\n                } else {\n                    that.currentstartbreak = startbreak;\n                    that.controls.eachword.removeClass(that.cd.activesentence);\n                    that.controls.eachspace.removeClass(that.cd.activesentence);\n                    if (startbreak !== false && nextbreak !== false) {\n                        for (var thewordnumber = startbreak.wordnumber+1; thewordnumber <= nextbreak.wordnumber; thewordnumber++) {\n                            $('#' + that.cd.spaceclass + '_' + thewordnumber).addClass((that.cd.activesentence));\n                            $('#' + that.cd.wordclass + '_' + thewordnumber).addClass((that.cd.activesentence));\n                        }\n                    }\n                }\n            };\n        }//end of register events\n\n    };//end of return value\n});"],"file":"modelaudiokaraoke.min.js"}