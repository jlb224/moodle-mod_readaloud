{"version":3,"file":"gradenowhelper.min.js","sources":["../src/gradenowhelper.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_readaloud/definitions', 'mod_readaloud/popoverhelper'], function ($, log, def, popoverhelper) {\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    log.debug('Gradenow helper: initialising');\r\n\r\n    return {\r\n        //controls\r\n\r\n        controls: {},\r\n        currentmode: 'grading',\r\n\r\n        constants: {\r\n            REVIEWMODE_NONE: 0,\r\n            REVIEWMODE_MACHINE: 1,\r\n            REVIEWMODE_HUMAN: 2,\r\n            REVIEWMODE_SCORESONLY: 3,\r\n            SESSIONSCORE_STRICT: 1\r\n        },\r\n\r\n        //class definitions\r\n        cd: {\r\n            audioplayerclass: def.audioplayerclass,\r\n            wordplayerclass: def.wordplayerclass,\r\n            wordclass: def.wordclass,\r\n            spaceclass: def.spaceclass,\r\n            badwordclass: def.badwordclass,\r\n            endspaceclass: def.endspaceclass,\r\n            unreadwordclass: def.unreadwordclass,\r\n            unreadspaceclass: def.unreadspaceclass,\r\n            wpmscoreid: def.wpmscoreid,\r\n            accuracyscoreid: def.accuracyscoreid,\r\n            sessionscoreid: def.sessionscoreid,\r\n            errorscoreid: def.errorscoreid,\r\n            formelementwpmscore: def.formelementwpmscore,\r\n            formelementaccuracy: def.formelementaccuracy,\r\n            formelementsessionscore: def.formelementsessionscore,\r\n            formelementendword: def.formelementendword,\r\n            formelementtime: def.formelementtime,\r\n            formelementerrors: def.formelementerrors,\r\n            modebutton: def.modebutton,\r\n\r\n            spotcheckbutton: def.spotcheckbutton,\r\n            transcriptcheckbutton: def.transcriptcheckbutton,\r\n            gradingbutton: def.gradingbutton,\r\n            clearbutton: def.clearbutton,\r\n            spotcheckmode: def.spotcheckmode,\r\n            aiunmatched: def.aiunmatched,\r\n            passagecontainer: def.passagecontainer,\r\n\r\n            maybeselfcorrectclass: def.maybeselfcorrectclass,\r\n            selfcorrectclass: def.selfcorrectclass,\r\n            notesclass: def.notesclass,\r\n            structuralclass: def.structuralclass,\r\n            meaningclass: def.meaningclass,\r\n            visualclass: def.visualclass,\r\n\r\n        },\r\n\r\n        options: {\r\n            enabletts: false,\r\n            targetwpm: 100,\r\n            ttslanguage: 'en',\r\n            totalseconds: 60,\r\n            allowearlyexit: false,\r\n            timelimit: 60,\r\n            enforcemarker: true,\r\n            totalwordcount: 0,\r\n            wpm: 0,\r\n            accuracy: 0,\r\n            sessionscore: 0,\r\n            sessionscoremethod: 0,\r\n            endwordnumber: 0,\r\n            errorwords: {},\r\n            activityid: null,\r\n            attemptid: null,\r\n            sesskey: null\r\n        },\r\n\r\n\r\n        init: function (config) {\r\n\r\n            //pick up opts from html\r\n            var theid = '#' + config['id'];\r\n            var configcontrol = $(theid).get(0);\r\n            if (configcontrol) {\r\n                var opts = JSON.parse(configcontrol.value);\r\n                $(theid).remove();\r\n            } else {\r\n                //if there is no config we might as well give up\r\n                log.debug('Gradenow helper js: No config found on page. Giving up.');\r\n                return;\r\n            }\r\n\r\n            //register the controls\r\n            this.register_controls();\r\n\r\n            //stash important info\r\n            this.options.activityid = opts['activityid'];\r\n            this.options.attemptid = opts['attemptid'];\r\n            this.options.sesskey = opts['sesskey'];\r\n            this.options.enabletts = opts['enabletts'];\r\n            this.options.ttslanguage = opts['ttslanguage'];\r\n            this.options.targetwpm = opts['targetwpm'];\r\n            this.options.sessionscoremethod = opts['sessionscoremethod'];\r\n            this.options.allowearlyexit = opts['allowearlyexit'];\r\n            this.options.timelimit = opts['timelimit'];\r\n            this.options.reviewmode = opts['reviewmode'];\r\n            this.options.readonly = opts['readonly'];\r\n            this.options.totalwordcount = $('.' + this.cd.wordclass).length;\r\n\r\n            if (opts['sessiontime'] > 0) {\r\n                if (opts['sessionerrors'] !== '') {\r\n                    this.options.errorwords = JSON.parse(opts['sessionerrors']);\r\n                } else {\r\n                    this.options.errorwords = {};\r\n                }\r\n                this.options.totalseconds = opts['sessiontime'];\r\n                this.options.endwordnumber = opts['sessionendword'];\r\n                this.options.sessionscore = opts['sessionscore'];\r\n                this.options.accuracy = opts['accuracy'];\r\n                this.options.wpm = opts['wpm'];\r\n\r\n                //We may have session matches and AI data, if AI is turned on\r\n                this.options.sessionmatches = JSON.parse(opts['sessionmatches']);\r\n                this.options.aidata = opts['aidata'];\r\n                if (this.options.aidata) {\r\n                    this.options.transcriptwords = opts['aidata'].transcript.split(\" \");\r\n\r\n                    //remove empty elements ... these can get in there\r\n                    this.options.transcriptwords = this.options.transcriptwords.filter(function (el) {\r\n                        return el !== '';\r\n                    });\r\n\r\n                } else {\r\n                    this.options.transcriptwords = [];\r\n                }\r\n\r\n                //if this has been graded, draw the gradestate\r\n                this.redrawgradestate();\r\n            } else {\r\n                //set up our end passage marker\r\n                this.options.endwordnumber = this.options.totalwordcount;\r\n            }\r\n\r\n            //add the endword marker\r\n            var thespace = $('#' + this.cd.spaceclass + '_' + this.options.endwordnumber);\r\n            thespace.addClass(this.cd.endspaceclass);\r\n\r\n            //register events\r\n            this.register_events();\r\n\r\n            //initialise our audio duration. We need this to calc. wpm\r\n            //but if allowearlyexit is false, actually we can skip waiting for audio.\r\n            //After audio loaded(if nec.) we call processscores to init score boxe\r\n            //TODO: really should get audio duration at recording time.\r\n            var m = this;\r\n            var processloadedaudio = function () {\r\n                if (m.options.allowearlyexit ||m.options.timelimit==0 ) {\r\n                    //using the audio player duration is actually more accurate than aidata.sessiontime\r\n                    //but it will give diff results to score used in autograding which when allowing earlyexit uses aiddata.sessiontime\r\n                    // (aidata.sessiontime is the end time of last recognised word.)\r\n                    //So to ensure consistency we also use the aidata.sessiontime here\r\n                    if (m.options.aidata && m.options.aidata.sessiontime) {\r\n                        m.options.totalseconds = m.options.aidata.sessiontime;\r\n                    } else {\r\n                        var audioplayer = $('.' + m.cd.audioplayerclass);\r\n                        var duration = audioplayer.prop('duration');\r\n                        //this can fail if audio is not loaded yet. Lets wait for it to load and reset stuff\r\n                        //its better not to need this, but calcs all fail if we do not know the recording time\r\n                        if(isNaN(duration)) {\r\n                            m.options.totalseconds = 0;\r\n                            audioplayer.on('durationchange', processloadedaudio);\r\n                        }else{\r\n                            m.options.totalseconds = Math.round(duration);\r\n                        }\r\n                    }\r\n                } else {\r\n                    m.options.totalseconds = m.options.timelimit;\r\n                }\r\n                //update form field\r\n                m.controls.formelementtime.val(m.options.totalseconds);\r\n                m.processscores();\r\n            };\r\n\r\n            //processloaded audio\r\n            processloadedaudio();\r\n\r\n            //init our popover helper which sets up the button events\r\n            this.init_popoverhelper();\r\n\r\n\r\n        },\r\n\r\n        //set up events related to popover helper\r\n        init_popoverhelper: function () {\r\n            var that = this;\r\n\r\n            //when the user clicks the reject popover accept button, we arrive here\r\n            popoverhelper.onReject = function () {\r\n                var clickwordnumber = $(this).attr('data-wordnumber');\r\n\r\n                //if nothing changed, just close the popover\r\n                var nochange = (clickwordnumber in that.options.errorwords);\r\n                if (nochange) {\r\n                    popoverhelper.remove();\r\n                    return;\r\n                }\r\n\r\n                //if a new choice was made update things\r\n                var playchain = that.fetchPlayChain(clickwordnumber);\r\n                for (var wordindex = playchain.startword; wordindex <= playchain.endword; wordindex++) {\r\n                    if (!(wordindex in that.options.errorwords)) {\r\n                        var theword = $('#' + that.cd.wordclass + '_' + wordindex);\r\n                        var thespace = $('#' + that.cd.spaceclass + '_' + wordindex);\r\n                        if(wordindex==clickwordnumber) {\r\n                            that.adderrorword(wordindex, theword.text());\r\n                            theword.addClass(that.cd.badwordclass);\r\n                            theword.addClass(that.cd.spotcheckmode);\r\n                            if (wordindex !== playchain.endword) {\r\n                                thespace.addClass(that.cd.spotcheckmode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                //that.markup_badspaces();\r\n                that.markup_aiunmatchedspaces();\r\n                that.processscores();\r\n                popoverhelper.remove();\r\n            };\r\n\r\n            //when the user clicks the popover accept button, we arrive here\r\n            popoverhelper.onAccept = function () {\r\n                var clickwordnumber = $(this).attr('data-wordnumber');\r\n\r\n                //if nothing changed, just close the popover\r\n                var nochange = !(clickwordnumber in that.options.errorwords);\r\n                if (nochange) {\r\n                    popoverhelper.remove();\r\n                    return;\r\n                }\r\n                //if a new choice was made update things\r\n                var playchain = that.fetchPlayChain(clickwordnumber);\r\n                for (var wordindex = playchain.startword; wordindex <= playchain.endword; wordindex++) {\r\n                    if (wordindex in that.options.errorwords) {\r\n                        if(wordindex==clickwordnumber) {\r\n                            delete that.options.errorwords[wordindex];\r\n                            var theword = $('#' + that.cd.wordclass + '_' + wordindex);\r\n                            var thespace = $('#' + that.cd.spaceclass + '_' + wordindex);\r\n                            theword.removeClass(that.cd.badwordclass);\r\n                            theword.removeClass(that.cd.spotcheckmode);\r\n                            thespace.removeClass(that.cd.spotcheckmode);\r\n                        }\r\n                    }\r\n                }\r\n                //that.markup_badspaces();\r\n                that.markup_aiunmatchedspaces();\r\n                that.processscores();\r\n                popoverhelper.remove();\r\n            };\r\n\r\n            //init the popover now that we have set the correct callback event handling thingies\r\n            popoverhelper.init();\r\n        },\r\n\r\n        register_controls: function () {\r\n\r\n            this.controls.wordplayer = $('#' + this.cd.wordplayerclass);\r\n            this.controls.audioplayer = $('.' + this.cd.audioplayerclass);\r\n            this.controls.eachword = $('.' + this.cd.wordclass);\r\n            this.controls.eachspace = $('.' + this.cd.spaceclass);\r\n            this.controls.endwordmarker = $('#' + this.cd.spaceclass + '_' + this.options.endwordnumber);\r\n            this.controls.spotcheckword = $('.' + this.cd.spotcheckmode);\r\n\r\n            this.controls.wpmscorebox = $('#' + this.cd.wpmscoreid);\r\n            this.controls.accuracyscorebox = $('#' + this.cd.accuracyscoreid);\r\n            this.controls.sessionscorebox = $('#' + this.cd.sessionscoreid);\r\n            this.controls.errorscorebox = $('#' + this.cd.errorscoreid);\r\n\r\n            this.controls.formelementwpmscore = $(\"#\" + this.cd.formelementwpmscore);\r\n            this.controls.formelementsessionscore = $(\"#\" + this.cd.formelementsessionscore);\r\n            this.controls.formelementaccuracy = $(\"#\" + this.cd.formelementaccuracy);\r\n            this.controls.formelementendword = $(\"#\" + this.cd.formelementendword);\r\n            this.controls.formelementerrors = $(\"#\" + this.cd.formelementerrors);\r\n            this.controls.formelementtime = $(\"#\" + this.cd.formelementtime);\r\n\r\n            this.controls.passagecontainer = $(\".\" + this.cd.passagecontainer);\r\n\r\n            //passage action buttons\r\n            this.controls.modebutton = $(\"#\" + this.cd.modebutton);\r\n\r\n            this.controls.gradingbutton = $(\"#\" + this.cd.gradingbutton);\r\n            this.controls.spotcheckbutton = $(\"#\" + this.cd.spotcheckbutton);\r\n            this.controls.transcriptcheckbutton = $(\"#\" + this.cd.transcriptcheckbutton);\r\n            this.controls.clearbutton = $(\"#\" + this.cd.clearbutton);\r\n\r\n        },\r\n\r\n        register_events: function () {\r\n            var that = this;\r\n            //set up event handlers\r\n\r\n\r\n            //Play audio from and to spot check part\r\n            this.controls.passagecontainer.on('click', '.' + this.cd.spotcheckmode + ', .' + this.cd.aiunmatched, function () {\r\n                if (that.currentmode === 'spotcheck') {\r\n                    var wordnumber = parseInt($(this).attr('data-wordnumber'));\r\n                    that.doPlaySpotCheck(wordnumber);\r\n                }\r\n            });\r\n\r\n\r\n            //in review mode, do nuffink though ... thats for the student\r\n            if (this.options.readonly) {\r\n                //do nothing\r\n\r\n                //here we will put real options for playing the model reading and user reading etc\r\n            } else if (false) {\r\n                /*\r\n                if(this.enabletts && this.options.ttslanguage != 'none'){\r\n                    this.controls.eachword.click(this.playword);\r\n                }\r\n                */\r\n\r\n                //if we have AI data then turn on spotcheckmode\r\n                if (this.options.sessionmatches) {\r\n                    this.doSpotCheckMode();\r\n                }\r\n\r\n                //add listeners for click events\r\n                this.controls.eachword.click(\r\n                    function () {\r\n                        //if we are in spotcheck mode just return, we do not grade\r\n                        if (that.currentmode === 'spotcheck') {\r\n                            return;\r\n                        }\r\n\r\n                        //get the word that was clicked\r\n                        var wordnumber = $(this).attr('data-wordnumber');\r\n                        var theword = $(this).text();\r\n\r\n                        if (that.currentmode === 'transcriptcheck') {\r\n                            var chunk = that.fetchTranscriptChunk(wordnumber);\r\n                            if (chunk) {\r\n                                popoverhelper.addTranscript(this, chunk);\r\n                            }\r\n\r\n\r\n                        }\r\n                    });\r\n\r\n                //if not in review mode\r\n            } else {\r\n\r\n                //process word clicks\r\n                this.controls.eachword.click(\r\n                    function () {\r\n\r\n\r\n                        //get the word that was clicked\r\n                        var wordnumber = $(this).attr('data-wordnumber');\r\n                        var theword = $(this).text();\r\n\r\n                        //if we are in spotcheck mode lets enable quick grade popovers\r\n                        if (that.currentmode === 'spotcheck') {\r\n                            if ($(this).hasClass(that.cd.badwordclass) || $(this).hasClass(that.cd.aiunmatched)) {\r\n                                popoverhelper.addQuickGrader(this);\r\n                            }\r\n                            return;\r\n                        }\r\n\r\n                        if (that.currentmode === 'transcriptcheck') {\r\n                            var chunk = that.fetchTranscriptChunk(wordnumber);\r\n                            if (chunk) {\r\n                                popoverhelper.addTranscript(this, chunk);\r\n                            }\r\n                            return;\r\n                        }\r\n\r\n                        //this will disallow badwords after the endmarker\r\n                        if (that.options.enforcemarker && Number(wordnumber) > Number(that.options.endwordnumber)) {\r\n                            return;\r\n                        }\r\n\r\n                        if (wordnumber in that.options.errorwords) {\r\n                            delete that.options.errorwords[wordnumber];\r\n                            $(this).removeClass(that.cd.badwordclass);\r\n                        } else {\r\n                            that.adderrorword(wordnumber, theword);\r\n                            $(this).addClass(that.cd.badwordclass);\r\n                        }\r\n                        that.processscores();\r\n                    }\r\n                ); //end of each word click\r\n\r\n                //process space clicks\r\n                this.controls.eachspace.click(\r\n                    function () {\r\n\r\n                        //if we are in spotcheck or transcript check mode just return, we do not grade\r\n                        if (that.currentmode === 'spotcheck' || that.currentmode === 'transcriptcheck') {\r\n                            return;\r\n                        }\r\n\r\n                        //this event is entered by  click on space\r\n                        //it relies on attr data-wordnumber being set correctly\r\n                        var wordnumber = $(this).attr('data-wordnumber');\r\n                        var thespace = $('#' + that.cd.spaceclass + '_' + wordnumber);\r\n\r\n                        if (wordnumber === that.options.endwordnumber) {\r\n                            that.options.endwordnumber = that.options.totalwordcount;\r\n                            thespace.removeClass(that.cd.endspaceclass);\r\n                            $('#' + that.cd.spaceclass + '_' + that.options.totalwordcount).addClass(that.cd.endspaceclass);\r\n                        } else {\r\n                            $('#' + that.cd.spaceclass + '_' + that.options.endwordnumber).removeClass(that.cd.endspaceclass);\r\n                            that.options.endwordnumber = wordnumber;\r\n                            thespace.addClass(that.cd.endspaceclass);\r\n                        }\r\n                        that.processunread();\r\n                        that.processscores();\r\n                    }\r\n                );//end of each space click\r\n\r\n                //process clearbutton's click event\r\n                this.controls.clearbutton.click(function () {\r\n\r\n                    //if we are in spotcheck or transcript check mode just return, we do not grade\r\n                    if (that.currentmode === 'spotcheck' || that.currentmode === 'transcriptcheck') {\r\n                        return;\r\n                    }\r\n\r\n                    //clear all the error words\r\n                    $('.' + that.cd.badwordclass).each(function (index) {\r\n                        var wordnumber = $(this).attr('data-wordnumber');\r\n                        delete that.options.errorwords[wordnumber];\r\n                        $(this).removeClass(that.cd.badwordclass);\r\n                    });\r\n\r\n                    //remove unread words\r\n                    $('.' + that.cd.wordclass).removeClass(that.cd.unreadwordclass);\r\n\r\n                    //set endspace to last space\r\n                    that.options.endwordnumber = that.options.totalwordcount;\r\n                    $('.' + that.cd.spaceclass).removeClass(that.cd.endspaceclass);\r\n                    $('#' + that.cd.spaceclass + '_' + that.options.totalwordcount).addClass(that.cd.endspaceclass);\r\n\r\n                    //reprocess scores\r\n                    that.processscores();\r\n                });\r\n\r\n\r\n                //modebutton: turn on grading\r\n                this.controls.gradingbutton.click(function () {\r\n                    that.undoCurrentMode();\r\n                    that.doGradingMode();\r\n                    that.updateButtonStates();\r\n                });\r\n\r\n            }//end of if/else reviewmode\r\n\r\n            //either in or out of review mode we want these\r\n            //modebutton: turn on spotchecking\r\n            this.controls.spotcheckbutton.click(function () {\r\n                that.undoCurrentMode();\r\n                that.doSpotCheckMode();\r\n                that.updateButtonStates();\r\n            });\r\n\r\n            //modebutton: turn on transcript checking\r\n            this.controls.transcriptcheckbutton.click(function () {\r\n                that.undoCurrentMode();\r\n                that.doTranscriptCheckMode();\r\n                that.updateButtonStates();\r\n            });\r\n\r\n\r\n        },\r\n\r\n        undoCurrentMode: function () {\r\n            switch (this.currentmode) {\r\n                case 'grading':\r\n                    //we do not undo this, its the default\r\n                    break;\r\n                case 'spotcheck':\r\n                    this.undoSpotCheckMode();\r\n                    break;\r\n                case 'transcriptcheck':\r\n                    this.undoTranscriptCheckMode();\r\n                    break;\r\n            }\r\n\r\n        },\r\n\r\n        updateButtonStates: function () {\r\n            switch (this.currentmode) {\r\n                case 'grading':\r\n                    this.controls.gradingbutton.prop('disabled', true);\r\n                    this.controls.spotcheckbutton.prop('disabled', false);\r\n                    this.controls.transcriptcheckbutton.prop('disabled', false);\r\n                    break;\r\n                case 'spotcheck':\r\n                    this.controls.gradingbutton.prop('disabled', false);\r\n                    this.controls.spotcheckbutton.prop('disabled', true);\r\n                    this.controls.transcriptcheckbutton.prop('disabled', false);\r\n                    break;\r\n                case 'transcriptcheck':\r\n                    this.controls.gradingbutton.prop('disabled', false);\r\n                    this.controls.spotcheckbutton.prop('disabled', false);\r\n                    this.controls.transcriptcheckbutton.prop('disabled', true);\r\n                    break;\r\n            }\r\n\r\n        },\r\n\r\n        /*\r\n        * Here we fetch the playchain, start playing frm audiostart and add an event handler to stop at audioend\r\n         */\r\n        doPlaySpotCheck: function (spotcheckindex) {\r\n            var playchain = this.fetchPlayChain(spotcheckindex);\r\n            var theplayer = this.controls.audioplayer[0];\r\n            //we pad the play audio by 0.5 seconds beginning and end\r\n            var pad = 0.5;\r\n            var duration = theplayer.duration;\r\n            //determine starttime\r\n            var endtime = parseFloat(playchain.audioend);\r\n            if (!isNaN(duration) && duration > (endtime + pad)) {\r\n                endtime = endtime + pad;\r\n            }\r\n            //determine endtime\r\n            var starttime = parseFloat(playchain.audiostart);\r\n            if ((starttime - pad) > 0) {\r\n                starttime = starttime - pad;\r\n            }\r\n\r\n            theplayer.currentTime = starttime;\r\n            //we want to start and stop audio playback for spotcheck\r\n            //but do not want to overwrite any existing timeupdate event handlers\r\n            //so declare the callback and pass it to the on and off functions\r\n            var thecallback = function (e) {\r\n                var currenttime = theplayer.currentTime;\r\n                if (currenttime >= endtime) {\r\n                    $(this).off(\"timeupdate\",thecallback);\r\n                    theplayer.pause();\r\n                }\r\n            }\r\n            $(this.controls.audioplayer).off(\"timeupdate\", thecallback);\r\n            $(this.controls.audioplayer).on(\"timeupdate\", thecallback);\r\n            theplayer.play();\r\n        },\r\n\r\n        /*\r\n        * The playchain is all the words in a string of badwords.\r\n        * The complexity comes because a bad word  is usually one that isunmatched by AI.\r\n        * So if the teacher clicks on a passage word that did not appear in the transcript, what should we play?\r\n        * Answer: All the words from the last known to the next known word. Hence we create a play chain\r\n        * For consistency, if the teacher flags matched words as bad, while we do know their precise location we still\r\n        * make a play chain. Its not a common situation probably.\r\n         */\r\n        fetchPlayChain: function (spotcheckindex) {\r\n\r\n            //find startword\r\n            var startindex = spotcheckindex;\r\n            var starttime = -1;\r\n            for (var wordnumber = spotcheckindex; wordnumber > 0; wordnumber--) {\r\n                var isbad = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.badwordclass);\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                //if current wordnumber part of the playchain, set it as the startindex.\r\n                // And get the audiotime if its a matched word. (we only know audiotime of matched words)\r\n                if (isbad || isunmatched) {\r\n                    startindex = wordnumber;\r\n                    if (!isunmatched) {\r\n                        starttime = this.options.sessionmatches['' + wordnumber].audiostart;\r\n                    } else {\r\n                        starttime = -1;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }//end of for loop --\r\n            //if we have no starttime then we need to get the next matched word's audioend and use that\r\n            if (starttime === -1) {\r\n                starttime = 0;\r\n                for (var wordnumber = startindex - 1; wordnumber > 0; wordnumber--) {\r\n                    if (this.options.sessionmatches['' + wordnumber]) {\r\n                        starttime = this.options.sessionmatches['' + wordnumber].audioend;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            //find endword\r\n            var endindex = spotcheckindex;\r\n            var endtime = -1;\r\n            var passageendword = this.options.totalwordcount;\r\n            for (var wordnumber = spotcheckindex; wordnumber <= passageendword; wordnumber++) {\r\n                var isbad = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.badwordclass);\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                //if its part of the playchain, set it to startindex. And get time if its a matched word.\r\n                if (isbad || isunmatched) {\r\n                    endindex = wordnumber;\r\n                    if (!isunmatched) {\r\n                        endtime = this.options.sessionmatches['' + wordnumber].audioend;\r\n                    } else {\r\n                        endtime = -1;\r\n                    }\r\n                } else {\r\n                    break;\r\n                }\r\n            }//end of for loop --\r\n            //if we have no endtime then we need to get the next matched word's audiostart and use that\r\n            if (endtime === -1) {\r\n                endtime = this.options.totalseconds;\r\n                for (var wordnumber = endindex + 1; wordnumber <= passageendword; wordnumber++) {\r\n                    if (this.options.sessionmatches['' + wordnumber]) {\r\n                        endtime = this.options.sessionmatches['' + wordnumber].audiostart;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            var playchain = {};\r\n            playchain.startword = startindex;\r\n            playchain.endword = parseInt(endindex);\r\n            playchain.audiostart = starttime;\r\n            playchain.audioend = parseInt(endtime);\r\n            //console.log('audiostart:' + starttime);\r\n            //console.log('audioend:' + endtime);\r\n\r\n            return playchain;\r\n\r\n        },\r\n\r\n        /*\r\n        * Here we mark up the passage for spotcheck mode. This will make up the spaces and the words as either badwords\r\n        * or aiunmatched words. We need to create playchains so aiunmatched still is indeicated visibly even where its\r\n        * not a badword (ie has been corrected)\r\n         */\r\n        doSpotCheckMode: function () {\r\n            var that = this;\r\n\r\n            //mark up all ai unmatched words as aiunmatched\r\n            this.markup_aiunmatchedwords();\r\n\r\n            //mark up all badwords as spotcheck words\r\n            $('.' + this.cd.badwordclass).addClass(this.cd.spotcheckmode);\r\n\r\n            //mark up spaces between spotcheck word and spotcheck/aiunmatched word (bad spaces)\r\n            //this.markup_badspaces();\r\n\r\n            //mark up spaces between aiunmatched word and spotcheck/aiunmatched word (aiunmatched spaces)\r\n            this.markup_aiunmatchedspaces();\r\n\r\n            this.currentmode = \"spotcheck\";\r\n        },\r\n\r\n        //mark up all ai unmatched words as aiunmatched\r\n        markup_aiunmatchedwords: function () {\r\n            var that = this;\r\n            if (this.options.sessionmatches) {\r\n                var prevmatch = 0;\r\n                $.each(this.options.sessionmatches, function (index, match) {\r\n                    var unmatchedcount = index - prevmatch - 1;\r\n                    if (unmatchedcount > 0) {\r\n                        for (var errorword = 1; errorword < unmatchedcount + 1; errorword++) {\r\n                            var wordnumber = prevmatch + errorword;\r\n                            $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                        }\r\n                    }\r\n                    prevmatch = parseInt(index);\r\n                });\r\n\r\n                //mark all words from last matched word to the end as aiunmatched\r\n                for (var errorword = prevmatch + 1; errorword <= this.options.endwordnumber; errorword++) {\r\n                    $('#' + that.cd.wordclass + '_' + errorword).addClass(that.cd.aiunmatched);\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        //mark up spaces between spotcheck word and spotcheck/aiunmatched word (bad spaces)\r\n        /* NO LONGER USED  */\r\n        markup_badspaces: function () {\r\n            var that = this;\r\n            //mark up spaces between spotcheck word and spotcheck/aiunmatched word (bad spaces)\r\n            $('.' + this.cd.badwordclass + '.' + this.cd.spotcheckmode).each(function (index) {\r\n                var wordnumber = parseInt($(this).attr('data-wordnumber'));\r\n                //build chains (highlight spaces) of badwords or aiunmatched\r\n                if ($('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.spotcheckmode) ||\r\n                    $('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.aiunmatched)) {\r\n                    $('#' + that.cd.spaceclass + '_' + wordnumber).addClass(that.cd.spotcheckmode);\r\n                }\r\n            });\r\n        },\r\n\r\n        markup_aiunmatchedspaces: function () {\r\n            var that = this;\r\n            $('.' + this.cd.wordclass + '.' + this.cd.aiunmatched).each(function (index) {\r\n                var wordnumber = parseInt($(this).attr('data-wordnumber'));\r\n                //build chains (highlight spaces) of badwords or aiunmatched\r\n                if ($('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.spotcheckmode) ||\r\n                    $('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.aiunmatched)) {\r\n                    $('#' + that.cd.spaceclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                }\r\n            });\r\n        },\r\n\r\n\r\n        undoSpotCheckMode: function () {\r\n            $('.' + this.cd.badwordclass).removeClass(this.cd.spotcheckmode);\r\n            $('.' + this.cd.spaceclass).removeClass(this.cd.spotcheckmode);\r\n            $('.' + this.cd.wordclass).removeClass(this.cd.aiunmatched);\r\n            $('.' + this.cd.spaceclass).removeClass(this.cd.aiunmatched);\r\n            $(this.controls.audioplayer).off(\"timeupdate\");\r\n            popoverhelper.remove();\r\n        },\r\n\r\n        /*\r\n       * Here we mark up the passage for transcriptcheck mode.\r\n        */\r\n        doTranscriptCheckMode: function () {\r\n            var that = this;\r\n            //mark up all ai unmatched words as transcriptcheck\r\n            if (this.options.sessionmatches) {\r\n                var prevmatch = 0;\r\n                $.each(this.options.sessionmatches, function (index, match) {\r\n                    var unmatchedcount = index - prevmatch - 1;\r\n                    if (unmatchedcount > 0) {\r\n                        for (var errorword = 1; errorword < unmatchedcount + 1; errorword++) {\r\n                            var wordnumber = prevmatch + errorword;\r\n                            $('#' + that.cd.wordclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                        }\r\n                    }\r\n                    prevmatch = parseInt(index);\r\n                });\r\n\r\n                //mark all words from last matched word to the end as aiunmatched\r\n                for (var errorword = prevmatch + 1; errorword <= this.options.endwordnumber; errorword++) {\r\n                    $('#' + that.cd.wordclass + '_' + errorword).addClass(that.cd.aiunmatched);\r\n                }\r\n            }\r\n\r\n            //mark up spaces between aiunmatched word and aiunmatched (bad spaces)\r\n            $('.' + this.cd.aiunmatched).each(function (index) {\r\n                var wordnumber = parseInt($(this).attr('data-wordnumber'));\r\n                //build chains (highlight spaces) of badwords or aiunmatched\r\n                if ($('#' + that.cd.wordclass + '_' + (wordnumber + 1)).hasClass(that.cd.aiunmatched)) {\r\n                    $('#' + that.cd.spaceclass + '_' + wordnumber).addClass(that.cd.aiunmatched);\r\n                }\r\n            });\r\n\r\n            this.currentmode = \"transcriptcheck\";\r\n        },\r\n\r\n        undoTranscriptCheckMode: function () {\r\n            $('.' + this.cd.wordclass).removeClass(this.cd.aiunmatched);\r\n            $('.' + this.cd.spaceclass).removeClass(this.cd.aiunmatched);\r\n            popoverhelper.remove();\r\n        },\r\n\r\n        doGradingMode: function () {\r\n            this.currentmode = \"grading\";\r\n        },\r\n\r\n        /*\r\n       * This will take a wordindex and find the previous and next transcript indexes that were matched and\r\n       * return all the transcript words in between those.\r\n        */\r\n        fetchTranscriptChunk: function (checkindex) {\r\n\r\n            var transcriptlength = this.options.transcriptwords.length;\r\n            if (transcriptlength === 0) {\r\n                return \"\";\r\n            }\r\n\r\n            //find startindex\r\n            var startindex = -1;\r\n            for (var wordnumber = checkindex; wordnumber > 0; wordnumber--) {\r\n\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                //if we matched then the subsequent transcript word is the last unmatched one in the checkindex sequence\r\n                if (!isunmatched) {\r\n                    startindex = this.options.sessionmatches['' + wordnumber].tposition + 1;\r\n                    break;\r\n                }\r\n            }//end of for loop\r\n\r\n            //find endindex\r\n            var endindex = -1;\r\n            for (var wordnumber = checkindex; wordnumber <= transcriptlength; wordnumber++) {\r\n\r\n                var isunmatched = $('#' + this.cd.wordclass + '_' + wordnumber).hasClass(this.cd.aiunmatched);\r\n                //if we matched then the previous transcript word is the last unmatched one in the checkindex sequence\r\n                if (!isunmatched) {\r\n                    endindex = this.options.sessionmatches['' + wordnumber].tposition - 1;\r\n                    break;\r\n                }\r\n            }//end of for loop --\r\n\r\n            //if there was no previous matched word, we set start to 1\r\n            if (startindex === -1) {\r\n                startindex = 1;\r\n            }\r\n            //if there was no subsequent matched word we flag the end as the -1\r\n            if (endindex === transcriptlength) {\r\n                endindex = -1;\r\n                //an edge case is where the first word is not in transcript and first match is the second or later passage\r\n                //word. It might not be possible for endindex to be lower than start index, but we don't want it anyway\r\n            } else if (endindex === 0 || endindex < startindex) {\r\n                return false;\r\n            }\r\n\r\n            //up until this point the indexes have started from 1, since the passage word numbers start from 1\r\n            //but the transcript array is 0 based so we adjust. array splice function does not include item and endindex\r\n            ///so it needs to be one more then start index. hence we do not adjust that\r\n            startindex--;\r\n\r\n            //finally we return the section\r\n            var ret = false;\r\n            if (endindex > 0) {\r\n                ret = this.options.transcriptwords.slice(startindex, endindex).join(\" \");\r\n            } else {\r\n                ret = this.options.transcriptwords.slice(startindex).join(\" \");\r\n            }\r\n            if (ret.trim() === '') {\r\n                return false;\r\n            } else {\r\n                return ret;\r\n            }\r\n        },\r\n\r\n\r\n        playword: function () {\r\n            var m = this;//M.mod_readaloud.gradenowhelper;\r\n            m.controls.wordplayer.attr('src', M.cfg.wwwroot + '/mod/readaloud/tts.php?txt=' + encodeURIComponent($(this).text())\r\n                + '&lang=' + m.options.ttslanguage + '&n=' + m.options.activityid);\r\n            m.controls.wordplayer[0].pause();\r\n            m.controls.wordplayer[0].load();\r\n            m.controls.wordplayer[0].play();\r\n        },\r\n        redrawgradestate: function () {\r\n            var m = this;\r\n            this.processunread();\r\n            if (this.options.reviewmode !== this.constants.REVIEWMODE_SCORESONLY) {\r\n                $.each(m.options.errorwords, function (index) {\r\n                        $('#' + m.cd.wordclass + '_' + m.options.errorwords[index].wordnumber).addClass(m.cd.badwordclass);\r\n                    }\r\n                );\r\n            }\r\n\r\n            this.markup_maybeselfcorrects();\r\n\r\n        },\r\n        adderrorword: function (wordnumber, word) {\r\n            this.options.errorwords[wordnumber] = {word: word, wordnumber: wordnumber};\r\n            //console.log(this.errorwords);\r\n\r\n        },\r\n        processword: function () {\r\n            var m = this;\r\n            var wordnumber = $(this).attr('data-wordnumber');\r\n            var theword = $(this).text();\r\n            //this will disallow badwords after the endmarker\r\n            if (m.options.enforcemarker && Number(wordnumber) > Number(m.options.endwordnumber)) {\r\n                return;\r\n            }\r\n\r\n            if (wordnumber in m.options.errorwords) {\r\n                delete m.options.errorwords[wordnumber];\r\n                $(this).removeClass(m.cd.badwordclass);\r\n            } else {\r\n                m.adderrorword(wordnumber, theword);\r\n                $(this).addClass(m.cd.badwordclass);\r\n            }\r\n            m.processscores();\r\n        },\r\n        //this function is never called it seems ....\r\n        processspace: function () {\r\n            //this event is entered by  click on space\r\n            //it relies on attr data-wordnumber being set correctly\r\n            var m = this;\r\n            var wordnumber = $(this).attr('data-wordnumber');\r\n            var thespace = $('#' + m.cd.spaceclass + '_' + wordnumber);\r\n\r\n            if (wordnumber === m.options.endwordnumber) {\r\n                m.options.endwordnumber = m.options.totalwordcount;\r\n                thespace.removeClass(m.cd.endspaceclass);\r\n                $('#' + m.cd.spaceclass + '_' + m.options.totalwordcount).addClass(m.cd.endspaceclass);\r\n            } else {\r\n                $('#' + m.cd.spaceclass + '_' + m.options.endwordnumber).removeClass(m.cd.endspaceclass);\r\n                m.options.endwordnumber = wordnumber;\r\n                thespace.addClass(m.cd.endspaceclass);\r\n            }\r\n            m.processunread();\r\n            m.processscores();\r\n        },\r\n\r\n        markup_maybeselfcorrects: function () {\r\n            var that = this;\r\n            if (this.options.sessionmatches) {\r\n                var prevmatch = false;\r\n                //loop through matches checking for insertions prior to matches\r\n                $.each(this.options.sessionmatches, function (index, match) {\r\n                    var maybe = false; // insertions exist between this match and prev match\r\n                    var verymaybe = false; //this word is matched and prev word is matched, but insertions exist\r\n\r\n                    if (prevmatch) {\r\n                        if (match.tposition - prevmatch.tposition > 1 && match.pposition - prevmatch.pposition === 1) {\r\n                            maybe = true;\r\n                            verymaybe = true;\r\n                        } else {\r\n                            if (match.tposition - prevmatch.tposition > 1) {\r\n                                maybe = true;\r\n                            }\r\n                        }\r\n                    } else if (prevmatch === false) {\r\n                        if (match.pposition < match.tposition) {\r\n                            maybe = true;\r\n                        }\r\n                    }\r\n                    //for now we will just work with very maybes, but we could do maybes\r\n                    if (verymaybe) {\r\n                        $('#' + that.cd.wordclass + '_' + match.pposition).addClass(that.cd.maybeselfcorrectclass);\r\n                    }\r\n                    prevmatch = match;\r\n                });\r\n            }\r\n        },\r\n\r\n        processunread: function () {\r\n            var m = this;\r\n            m.controls.eachword.each(function (index) {\r\n                var wordnumber = $(this).attr('data-wordnumber');\r\n                var thespace = $('#' + m.cd.spaceclass + '_' + wordnumber);\r\n\r\n                if (Number(wordnumber) > Number(m.options.endwordnumber)) {\r\n                    $(this).addClass(m.cd.unreadwordclass);\r\n                    thespace.addClass(m.cd.unreadspaceclass);\r\n\r\n                    //this will clear badwords after the endmarker\r\n                    if (m.options.enforcemarker && wordnumber in m.options.errorwords) {\r\n                        delete m.options.errorwords[wordnumber];\r\n                        $(this).removeClass(m.cd.badwordclass);\r\n                    }\r\n                } else {\r\n                    $(this).removeClass(m.cd.unreadwordclass);\r\n                    thespace.removeClass(m.cd.unreadspaceclass);\r\n                }\r\n            });\r\n        },\r\n        processscores: function () {\r\n            var m = this;\r\n            var errorscore = Object.keys(m.options.errorwords).length;\r\n            m.controls.errorscorebox.text(errorscore);\r\n\r\n            //wpm score\r\n            //we do not apply accuracy adjustment here, that is only for machine grades.\r\n            var wpmscore = 0;\r\n            var strictwpmscore = 0;\r\n            var totalwords=m.options.endwordnumber - errorscore;\r\n            if (m.options.totalseconds > 0) {\r\n\r\n                //regular WPM\r\n                wpmscore = Math.round((totalwords * 60) / m.options.totalseconds);\r\n\r\n                //strict WPM for grading\r\n                totalwords = totalwords - errorscore;\r\n                if(totalwords < 0){totalwords =0;}\r\n                strictwpmscore = Math.round((totalwords * 60) / m.options.totalseconds);\r\n            }\r\n            m.options.wpm = wpmscore;\r\n            m.controls.wpmscorebox.text(wpmscore);\r\n\r\n            //accuracy score\r\n            var accuracyscore = 0;\r\n            if (m.options.endwordnumber > 0) {\r\n                accuracyscore = Math.round((m.options.endwordnumber - errorscore) / m.options.endwordnumber * 100);\r\n            }\r\n            m.options.accuracy = accuracyscore;\r\n            m.controls.accuracyscorebox.text(accuracyscore);\r\n\r\n            //sessionscore\r\n            if(m.options.sessionscoremethod == m.constants.SESSIONSCORE_STRICT) {\r\n                var usewpmscore = strictwpmscore;\r\n            }else{\r\n                var usewpmscore = wpmscore;\r\n            }\r\n\r\n            if (usewpmscore > m.options.targetwpm) {\r\n                usewpmscore = m.options.targetwpm;\r\n            }\r\n            var sessionscore = Math.round(usewpmscore / m.options.targetwpm * 100);\r\n            m.controls.sessionscorebox.text(sessionscore);\r\n\r\n            //update form field\r\n            m.controls.formelementwpmscore.val(wpmscore);\r\n            m.controls.formelementsessionscore.val(sessionscore);\r\n            m.controls.formelementaccuracy.val(accuracyscore);\r\n            m.controls.formelementendword.val(m.options.endwordnumber);\r\n            m.controls.formelementerrors.val(JSON.stringify(m.options.errorwords));\r\n\r\n        }\r\n\r\n    };\r\n});"],"names":["define","$","log","def","popoverhelper","debug","controls","currentmode","constants","REVIEWMODE_NONE","REVIEWMODE_MACHINE","REVIEWMODE_HUMAN","REVIEWMODE_SCORESONLY","SESSIONSCORE_STRICT","cd","audioplayerclass","wordplayerclass","wordclass","spaceclass","badwordclass","endspaceclass","unreadwordclass","unreadspaceclass","wpmscoreid","accuracyscoreid","sessionscoreid","errorscoreid","formelementwpmscore","formelementaccuracy","formelementsessionscore","formelementendword","formelementtime","formelementerrors","modebutton","spotcheckbutton","transcriptcheckbutton","gradingbutton","clearbutton","spotcheckmode","aiunmatched","passagecontainer","maybeselfcorrectclass","selfcorrectclass","notesclass","structuralclass","meaningclass","visualclass","options","enabletts","targetwpm","ttslanguage","totalseconds","allowearlyexit","timelimit","enforcemarker","totalwordcount","wpm","accuracy","sessionscore","sessionscoremethod","endwordnumber","errorwords","activityid","attemptid","sesskey","init","config","theid","configcontrol","get","opts","JSON","parse","value","remove","register_controls","reviewmode","readonly","this","length","sessionmatches","aidata","transcriptwords","transcript","split","filter","el","redrawgradestate","addClass","register_events","m","processloadedaudio","sessiontime","audioplayer","duration","prop","isNaN","on","Math","round","val","processscores","init_popoverhelper","that","onReject","clickwordnumber","attr","playchain","fetchPlayChain","wordindex","startword","endword","theword","thespace","adderrorword","text","markup_aiunmatchedspaces","onAccept","removeClass","wordplayer","eachword","eachspace","endwordmarker","spotcheckword","wpmscorebox","accuracyscorebox","sessionscorebox","errorscorebox","wordnumber","parseInt","doPlaySpotCheck","click","Number","chunk","fetchTranscriptChunk","addTranscript","hasClass","addQuickGrader","processunread","each","index","undoCurrentMode","doGradingMode","updateButtonStates","doSpotCheckMode","doTranscriptCheckMode","undoSpotCheckMode","undoTranscriptCheckMode","spotcheckindex","theplayer","endtime","parseFloat","audioend","starttime","audiostart","currentTime","thecallback","e","off","pause","play","startindex","isbad","isunmatched","endindex","passageendword","markup_aiunmatchedwords","prevmatch","match","unmatchedcount","errorword","markup_badspaces","checkindex","transcriptlength","tposition","ret","slice","join","trim","playword","M","cfg","wwwroot","encodeURIComponent","load","markup_maybeselfcorrects","word","processword","processspace","verymaybe","pposition","errorscore","Object","keys","wpmscore","strictwpmscore","totalwords","accuracyscore","usewpmscore","stringify"],"mappings":"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"}