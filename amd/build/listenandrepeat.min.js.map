{"version":3,"sources":["../src/listenandrepeat.js"],"names":["define","$","log","ajax","def","cloudpoodll","debug","currentSentence","mak","container","audiourl","results","init","props","self","message","type","getComparison","capturedspeech","comparison","gotComparison","modelaudiokaraoke","fetch_audio_url","landrcontainer","register_events","register_mak","on_reach_audio_break","sentence","oldbreak","newbreak","trim","pause_audio","modal","html","on","play_audio","spliton","typed","console","JSON","stringify","passage","transcript","callback","call","methodname","args","alternatives","language","done","ajaxresult","payloadobject","parse","fail","err"],"mappings":"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","sourcesContent":["define(['jquery', 'core/log', 'core/ajax', 'mod_readaloud/definitions', 'mod_readaloud/cloudpoodllloader'], function($, log, ajax, def, cloudpoodll) {\n  \"use strict\"; // jshint ;_;\n\n  log.debug('Readaloud listen and repeat: initialising');\n\n  return {\n\n    currentSentence:\"\",\n    mak: null,\n    container: null,\n    audiourl: false,\n    results:[],\n    init: function(props) {\n      var self = this;\n      cloudpoodll.init('readaloud_pushrecorder', function(message) {\n\n        switch (message.type) {\n          case 'recording':\n            break;\n\n          case 'speech':\n            self.getComparison(\n              self.currentSentence,\n              message.capturedspeech,\n              function(comparison) {\n                self.gotComparison(comparison, message);\n              }\n            );\n            break;\n\n        }\n\n      });\n      self.mak = props.modelaudiokaraoke;\n      self.results = props.results;\n      self.audiourl = self.mak.fetch_audio_url();\n      self.container = $('#' + def.landrcontainer);\n      self.register_events();\n      self.register_mak();\n    },\n\n    register_mak: function() {\n      var self = this;\n      \n      self.mak.on_reach_audio_break = function(sentence, oldbreak, newbreak) {\n\n        // sentence contains the target text\n\n        //empty strings are none of our concern\n        if (sentence.trim() === '') {\n          return;\n        }\n\n        self.currentSentence = sentence;\n        \n        log.debug(sentence);\n        log.debug(oldbreak);\n        log.debug(newbreak);\n\n        //pause audio while we do our thing\n        self.mak.pause_audio();\n        self.container.modal('show');\n        $(\"#mod_readaloud_modal_target_phrase\").html(sentence);\n\n      }\n\n    },\n\n    register_events: function() {\n\n      var self = this;\n\n      self.container.on('hidden.bs.modal', function(e) {\n        self.mak.play_audio();\n      });\n\n    },\n    spliton: new RegExp('([,.!?:;\" ])', 'g'),\n\n    gotComparison: function(comparison, typed) {\n\n      var self = this;\n      console.log(\"comparison:\"+JSON.stringify(comparison));\n      console.log(\"typed:\"+JSON.stringify(typed));\n      //self.results[i]=100\n\n    },\n    getComparison: function(passage, transcript, callback) {\n      var self = this;\n\n      ajax.call([{\n        methodname: 'mod_readaloud_compare_passage_to_transcript',\n        args: {\n          passage: passage,\n          transcript: transcript,\n          alternatives: '',\n          language: 'en-US'\n        },\n        done: function(ajaxresult) {\n          var payloadobject = JSON.parse(ajaxresult);\n          if (payloadobject) {\n            callback(payloadobject);\n          } else {\n            callback(false);\n          }\n        },\n        fail: function(err) {\n          console.log(err);\n        }\n      }]);\n\n    }\n\n  };\n});"],"file":"listenandrepeat.min.js"}