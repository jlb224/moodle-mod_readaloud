{"version":3,"file":"listenandrepeat.min.js","sources":["../src/listenandrepeat.js"],"sourcesContent":["define(['jquery', 'core/log', 'core/ajax', 'mod_readaloud/definitions', 'mod_readaloud/cloudpoodllloader', 'mod_readaloud/ttrecorder'],\r\n    function($, log, ajax, def, cloudpoodll, ttrecorder) {\r\n  \"use strict\"; // jshint ;_;\r\n\r\n  log.debug('Readaloud listen and repeat: initialising');\r\n\r\n  return {\r\n\r\n    activated: false,\r\n    currentSentence: \"\",\r\n    currentPhonetic: \"\",\r\n    language: \"en-US\",\r\n    currentAudioStart: 0,\r\n    currentAudioStop: 0,\r\n    oldBreak: {},\r\n    newBreak: {},\r\n    mak: null,\r\n    controls: {},\r\n    results: [],\r\n    phonetics: [],\r\n    cmid: 0,\r\n    ttr: {},\r\n\r\n    init: function(props) {\r\n\r\n      var self = this;\r\n      self.cmid = props.cmid;\r\n      self.mak = props.modelaudiokaraoke;\r\n      self.language = props.language;\r\n      self.region = props.region;\r\n      self.phonetics = props.phonetics;\r\n      self.stt_guided = props.stt_guided;\r\n      self.shadow = false;//props.shadow;\r\n      self.ttr={};\r\n\r\n      //recorder stuff\r\n      var theCallback =function(message) {\r\n          switch (message.type) {\r\n            case 'recordingstarted':\r\n              if (self.controls.shadowplaycheckbox.is(\":checked\")) {\r\n                self.shadow = true;\r\n                log.debug('shadow is true');\r\n                self.controls.playbutton.trigger('click');\r\n              }else{\r\n                log.debug('shadow is false');\r\n                self.shadow=false;\r\n              }\r\n              //hide the self model player (though it may not be here) because we do not want it playing old stuff into mic\r\n              self.controls.playselfbutton.hide();\r\n\r\n              break;\r\n\r\n            case 'recordingstopped':\r\n                  if (self.shadow === true){\r\n                    self.controls.hiddenplayer[0].pause();\r\n                  }\r\n                  if(self.stt_guided || self.ttr.usebrowserrec===false){\r\n                    self.controls.playselfbutton.show();\r\n                  }\r\n                  break;\r\n\r\n              case 'speech':\r\n\r\n                  self.getComparison(\r\n                      self.cmid,\r\n                      self.currentSentence,\r\n                      message.capturedspeech,\r\n                      self.currentPhonetic,\r\n                      function(comparison) {\r\n                          self.gotComparison(comparison, message);\r\n                      }\r\n                  );\r\n                  break;\r\n          }\r\n      };\r\n\r\n        //init tt recorder\r\n      var opts = {};\r\n      opts.uniqueid = 'readaloud_ttrecorder';\r\n      opts.stt_guided = self.stt_guided;\r\n      opts.callback = theCallback;\r\n      opts.shadow = false;\r\n      self.ttr = ttrecorder.clone();\r\n      self.ttr.init(opts);\r\n\r\n\r\n      self.prepare_controls();\r\n      self.register_events();\r\n      self.register_mak();\r\n    },\r\n\r\n    activate: function() {\r\n      this.results = [];\r\n      this.activated = true;\r\n    },\r\n    deactivate: function() {\r\n      if (this.mak.controls.audioplayer[0].playing) {\r\n        this.mak.controls.audioplayer[0].pause();\r\n      }\r\n      this.activated = false;\r\n    },\r\n\r\n    prepare_controls: function() {\r\n      var self = this;\r\n      self.controls.container = $('#' + def.landrcontainer);\r\n      self.controls.hiddenplayer = $('#mod_readaloud_landr_hiddenplayer');\r\n      self.controls.hiddenselfplayer = $('#mod_readaloud_landr_hiddenselfplayer');\r\n      self.controls.playbutton = $('#mod_readaloud_landr_modalplay');\r\n      self.controls.shadowplaycheckbox = $('#mod_readaloud_landr_shadow');\r\n      self.controls.skipbutton = $('#mod_readaloud_landr_modalskip');\r\n      self.controls.finishedbutton = $(\"#mod_readaloud_landr_modalfinished\");\r\n      self.controls.playselfbutton = $(\"#mod_readaloud_landr_modalplayself\");\r\n      self.audiourl = self.mak.fetch_audio_url();\r\n      self.controls.hiddenplayer.attr('src', self.audiourl);\r\n\r\n    },\r\n\r\n    register_mak: function() {\r\n      var self = this;\r\n\r\n      self.mak.on_reach_audio_break = function(sentence, oldbreak, newbreak, breaks) {\r\n       // log.debug(breaks);\r\n        //do not get involved if we are not active\r\n        //model audio karaoke is used elsewhere (shadow and preview) as well\r\n        if (!self.activated) {\r\n          return;\r\n        }\r\n\r\n        // sentence contains the target text\r\n        //empty strings are none of our concern\r\n        if (sentence.trim() === '') {\r\n          return;\r\n        }\r\n\r\n        self.currentSentence = sentence;\r\n        self.oldBreak = oldbreak;\r\n        self.newBreak = newbreak;\r\n        self.currentAudioStart = oldbreak.audiotime;\r\n        self.currentAudioEnd = newbreak.audiotime;\r\n        //in some cases ttrecorder wants to know the currentsentence\r\n        if(!self.ttr.usebrowserrec) {\r\n          self.ttr.currentPrompt=self.currentSentence;\r\n        }\r\n\r\n        if(self.currentAudioStart===self.currentAudioEnd){\r\n            //This is a special case where the end of the audio has been reached in MAK, and there is now no next break\r\n            self.currentAudioEnd=self.controls.hiddenplayer[0].duration;\r\n        }\r\n\r\n          if(self.phonetics.length>newbreak.wordnumber-1){\r\n              var startpos = oldbreak.wordnumber;\r\n              if(startpos<0){startpos=0;}\r\n              var endpos = newbreak.wordnumber;\r\n\r\n              /*\r\n              * break=0: wordnumber 0 start = 0, end = 9: jssplit returns 0-8\r\n              * break=1: wordnumber 9 start = 9, end = 18: jssplit returns 9-17\r\n              * break=2: wordnumber 18 start = 18, end = 99: jssplit returns 18-98\r\n               */\r\n              self.currentPhonetic = self.phonetics.slice(startpos,endpos).join(' ');\r\n          }else{\r\n              self.currentPhonetic  = '';\r\n          }\r\n\r\n        //pause audio while we do our thing\r\n        if (oldbreak.breaknumber == 0 && newbreak == false) {\r\n          // do nothing\r\n        } else {\r\n          // detect last line\r\n          if (oldbreak.breaknumber == breaks[breaks.length - 1].breaknumber) {\r\n            self.controls.finishedbutton.show();\r\n            self.controls.skipbutton.hide();\r\n            self.oldBreak.isfinalbreak=true;\r\n            // Alert server and activity controller that the listen and practice is complete\r\n            self.on_complete();\r\n          } else {\r\n            self.controls.finishedbutton.hide();\r\n            self.controls.skipbutton.show();\r\n          }\r\n          self.mak.pause_audio();\r\n          self.controls.container.modal('show');\r\n          $(\"#mod_readaloud_modal_target_phrase\").html(sentence.split(/ /).map(function(e, i) {\r\n            return '<div class=\"mod_readaloud_modal_target_word\" data-index=\"' + i + '\">' + e + '</div>';\r\n          }));\r\n        }\r\n\r\n      };\r\n\r\n    },\r\n\r\n    // Callback for when the listen and repeat activity is complete, overridden by activity controller.\r\n    on_complete: function() {},\r\n\r\n    // Register events for the listen and repeat activity.\r\n    register_events: function() {\r\n\r\n      var self = this;\r\n\r\n      self.controls.playbutton.on('click', function(e) {\r\n        if (!self.controls.hiddenplayer[0].paused) {\r\n          self.controls.hiddenplayer[0].pause();\r\n        }else {\r\n          self.controls.hiddenplayer[0].currentTime = self.currentAudioStart;\r\n          self.controls.hiddenplayer[0].play();\r\n        }\r\n      });\r\n\r\n      self.controls.playselfbutton.on('click',function(e){\r\n        if (!self.controls.hiddenselfplayer[0].paused) {\r\n          self.controls.hiddenselfplayer[0].pause();\r\n        }else {\r\n          self.controls.hiddenselfplayer.attr('src', self.ttr.audio.dataURI);\r\n          self.controls.hiddenselfplayer[0].play();\r\n        }\r\n      });\r\n\r\n      self.controls.shadowplaycheckbox.on('change', function(e) {\r\n        var isChecked = $(this).is(':checked');\r\n        self.ttr.shadow=isChecked;\r\n      });\r\n\r\n      self.controls.skipbutton.on('click', function(e) {\r\n        self.controls.container.modal('hide');\r\n\r\n        //hide the self model player because when we show page again we dont want it enabled\r\n        self.controls.playselfbutton.hide();\r\n\r\n        //we might get here from a 100% score on final break on the modal (it calls the skip button\r\n        //so we check if its finished or not. Otherwise it will return to the first break and start playing\r\n        if(self.oldBreak.isfinalbreak) {\r\n          self.mak.controls.audioplayer[0].currentTime = 0;\r\n        }else{\r\n          if (self.controls.hiddenplayer[0].playing) {\r\n            self.controls.hiddenplayer[0].pause();\r\n          }\r\n          self.controls.hiddenplayer[0].currentTime = self.currentAudioStart;\r\n          //if the main page player has gone a bit forward, we can lose the first part of our next break, so we adjust that if we have to\r\n          //we dont want it hitting the same break repeatedly though, so we inc by .1 to get clear of that\r\n          log.debug('mak audio time', self.mak.get_audio_time());\r\n          log.debug('self current audio end', self.currentAudioEnd);\r\n          if(self.mak.get_audio_time() > self.currentAudioEnd+.1){\r\n            self.mak.set_audio_time(self.currentAudioEnd+.1);\r\n          }\r\n            self.mak.play_audio();\r\n        }\r\n      });\r\n\r\n      self.controls.finishedbutton.on('click', function() {\r\n        self.controls.container.modal('hide');\r\n        self.mak.controls.audioplayer[0].currentTime = 0;\r\n      });\r\n\r\n      self.controls.hiddenplayer[0].ontimeupdate = function() {\r\n        if (self.controls.hiddenplayer[0].currentTime >= self.currentAudioEnd) {\r\n          self.controls.hiddenplayer[0].pause();\r\n        }\r\n      };\r\n\r\n    },\r\n\r\n   // spliton: new RegExp('([,.!?:;\" ])', 'g'),\r\n      spliton: new RegExp(/([!\"# $%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\r\n\r\n    gotComparison: function(comparison, typed) {\r\n     if(!comparison){return;}\r\n      var self = this;\r\n      var thisClass;\r\n      var wordsmatched=0;\r\n      $(\".mod_readaloud_modal_target_word\").removeClass(\"mod_readaloud_modal_target_word_correct mod_readaloud_modal_target_word_incorrect\");\r\n\r\n      comparison.forEach(function(word, idx) {\r\n\r\n        if( word.matched) {\r\n            thisClass = \"mod_readaloud_modal_target_word_correct\" ;\r\n            wordsmatched++;\r\n        }else{\r\n            thisClass = \"mod_readaloud_modal_target_word_incorrect\";\r\n        }\r\n        $(\".mod_readaloud_modal_target_word[data-index='\" + idx + \"']\").addClass(thisClass);\r\n        if(comparison.length == wordsmatched){\r\n            setTimeout(function(){self.controls.skipbutton.trigger('click');},600);\r\n        }\r\n      });\r\n\r\n    },\r\n    getComparison: function(cmid, passage, transcript,passagephonetic, callback) {\r\n      var self = this;\r\n\r\n      ajax.call([{\r\n        methodname: 'mod_readaloud_compare_passage_to_transcript',\r\n        args: {\r\n          cmid: cmid,\r\n          passage: passage,\r\n          transcript: transcript,\r\n          passagephonetic: passagephonetic,\r\n          language: self.language\r\n        },\r\n        done: function(ajaxresult) {\r\n          var payloadobject = JSON.parse(ajaxresult);\r\n          if (payloadobject) {\r\n            callback(payloadobject);\r\n          } else {\r\n            callback(false);\r\n          }\r\n        },\r\n        fail: function(err) {\r\n          log.debug(err);\r\n        }\r\n      }]);\r\n\r\n    },\r\n\r\n      mobile_user: function() {\r\n\r\n          if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n              return true;\r\n          } else {\r\n              return false;\r\n          }\r\n      },\r\n\r\n      chrome_user: function(){\r\n          if(/Chrome/i.test(navigator.userAgent)) {\r\n              return true;\r\n          }else{\r\n              return false;\r\n          }\r\n      }\r\n  };\r\n});"],"names":["define","$","log","ajax","def","cloudpoodll","ttrecorder","debug","activated","currentSentence","currentPhonetic","language","currentAudioStart","currentAudioStop","oldBreak","newBreak","mak","controls","results","phonetics","cmid","ttr","init","props","self","this","modelaudiokaraoke","region","stt_guided","shadow","opts","callback","message","type","shadowplaycheckbox","is","playbutton","trigger","playselfbutton","hide","hiddenplayer","pause","usebrowserrec","show","getComparison","capturedspeech","comparison","gotComparison","clone","prepare_controls","register_events","register_mak","activate","deactivate","audioplayer","playing","container","landrcontainer","hiddenselfplayer","skipbutton","finishedbutton","audiourl","fetch_audio_url","attr","on_reach_audio_break","sentence","oldbreak","newbreak","breaks","trim","audiotime","currentAudioEnd","currentPrompt","duration","length","wordnumber","startpos","endpos","slice","join","breaknumber","isfinalbreak","on_complete","pause_audio","modal","html","split","map","e","i","on","paused","currentTime","play","audio","dataURI","isChecked","get_audio_time","set_audio_time","play_audio","ontimeupdate","spliton","RegExp","typed","thisClass","wordsmatched","removeClass","forEach","word","idx","matched","addClass","setTimeout","passage","transcript","passagephonetic","call","methodname","args","done","ajaxresult","payloadobject","JSON","parse","fail","err","mobile_user","test","navigator","userAgent","chrome_user"],"mappings":"AAAAA,uCAAO,CAAC,SAAU,WAAY,YAAa,4BAA6B,kCAAmC,6BACvG,SAASC,EAAGC,IAAKC,KAAMC,IAAKC,YAAaC,mBAG3CJ,IAAIK,MAAM,6CAEH,CAELC,WAAW,EACXC,gBAAiB,GACjBC,gBAAiB,GACjBC,SAAU,QACVC,kBAAmB,EACnBC,iBAAkB,EAClBC,SAAU,GACVC,SAAU,GACVC,IAAK,KACLC,SAAU,GACVC,QAAS,GACTC,UAAW,GACXC,KAAM,EACNC,IAAK,GAELC,KAAM,SAASC,WAETC,KAAOC,KACXD,KAAKJ,KAAOG,MAAMH,KAClBI,KAAKR,IAAMO,MAAMG,kBACjBF,KAAKb,SAAWY,MAAMZ,SACtBa,KAAKG,OAASJ,MAAMI,OACpBH,KAAKL,UAAYI,MAAMJ,UACvBK,KAAKI,WAAaL,MAAMK,WACxBJ,KAAKK,QAAS,EACdL,KAAKH,IAAI,OA4CLS,KAAO,CACXA,SAAgB,wBAChBA,KAAKF,WAAaJ,KAAKI,WACvBE,KAAKC,SA5CY,SAASC,gBACdA,QAAQC,UACT,mBACCT,KAAKP,SAASiB,mBAAmBC,GAAG,aACtCX,KAAKK,QAAS,EACd3B,IAAIK,MAAM,kBACViB,KAAKP,SAASmB,WAAWC,QAAQ,WAEjCnC,IAAIK,MAAM,mBACViB,KAAKK,QAAO,GAGdL,KAAKP,SAASqB,eAAeC,iBAI1B,oBACqB,IAAhBf,KAAKK,QACPL,KAAKP,SAASuB,aAAa,GAAGC,SAE7BjB,KAAKI,aAAuC,IAAzBJ,KAAKH,IAAIqB,gBAC7BlB,KAAKP,SAASqB,eAAeK,iBAI9B,SAEDnB,KAAKoB,cACDpB,KAAKJ,KACLI,KAAKf,gBACLuB,QAAQa,eACRrB,KAAKd,iBACL,SAASoC,YACLtB,KAAKuB,cAAcD,WAAYd,cAYnDF,KAAKD,QAAS,EACdL,KAAKH,IAAMf,WAAW0C,QACtBxB,KAAKH,IAAIC,KAAKQ,MAGdN,KAAKyB,mBACLzB,KAAK0B,kBACL1B,KAAK2B,gBAGPC,SAAU,gBACHlC,QAAU,QACVV,WAAY,GAEnB6C,WAAY,WACN5B,KAAKT,IAAIC,SAASqC,YAAY,GAAGC,cAC9BvC,IAAIC,SAASqC,YAAY,GAAGb,aAE9BjC,WAAY,GAGnByC,iBAAkB,WACLxB,KACNR,SAASuC,UAAYvD,EAAE,IAAMG,IAAIqD,gBAD3BhC,KAENR,SAASuB,aAAevC,EAAE,qCAFpBwB,KAGNR,SAASyC,iBAAmBzD,EAAE,yCAHxBwB,KAINR,SAASmB,WAAanC,EAAE,kCAJlBwB,KAKNR,SAASiB,mBAAqBjC,EAAE,+BAL1BwB,KAMNR,SAAS0C,WAAa1D,EAAE,kCANlBwB,KAONR,SAAS2C,eAAiB3D,EAAE,sCAPtBwB,KAQNR,SAASqB,eAAiBrC,EAAE,sCARtBwB,KASNoC,SATMpC,KASUT,IAAI8C,kBATdrC,KAUNR,SAASuB,aAAauB,KAAK,MAVrBtC,KAUiCoC,WAI9CV,aAAc,eACR3B,KAAOC,KAEXD,KAAKR,IAAIgD,qBAAuB,SAASC,SAAUC,SAAUC,SAAUC,WAIhE5C,KAAKhB,WAMc,KAApByD,SAASI,WAIb7C,KAAKf,gBAAkBwD,SACvBzC,KAAKV,SAAWoD,SAChB1C,KAAKT,SAAWoD,SAChB3C,KAAKZ,kBAAoBsD,SAASI,UAClC9C,KAAK+C,gBAAkBJ,SAASG,UAE5B9C,KAAKH,IAAIqB,gBACXlB,KAAKH,IAAImD,cAAchD,KAAKf,iBAG3Be,KAAKZ,oBAAoBY,KAAK+C,kBAE7B/C,KAAK+C,gBAAgB/C,KAAKP,SAASuB,aAAa,GAAGiC,UAGlDjD,KAAKL,UAAUuD,OAAOP,SAASQ,WAAW,EAAE,KACvCC,SAAWV,SAASS,WACrBC,SAAS,IAAGA,SAAS,OACpBC,OAASV,SAASQ,WAOtBnD,KAAKd,gBAAkBc,KAAKL,UAAU2D,MAAMF,SAASC,QAAQE,KAAK,UAElEvD,KAAKd,gBAAmB,GAIF,GAAxBwD,SAASc,aAAgC,GAAZb,WAI3BD,SAASc,aAAeZ,OAAOA,OAAOM,OAAS,GAAGM,aACpDxD,KAAKP,SAAS2C,eAAejB,OAC7BnB,KAAKP,SAAS0C,WAAWpB,OACzBf,KAAKV,SAASmE,cAAa,EAE3BzD,KAAK0D,gBAEL1D,KAAKP,SAAS2C,eAAerB,OAC7Bf,KAAKP,SAAS0C,WAAWhB,QAE3BnB,KAAKR,IAAImE,cACT3D,KAAKP,SAASuC,UAAU4B,MAAM,QAC9BnF,EAAE,sCAAsCoF,KAAKpB,SAASqB,MAAM,KAAKC,KAAI,SAASC,EAAGC,SACxE,4DAA8DA,EAAI,KAAOD,EAAI,iBAS5FN,YAAa,aAGbhC,gBAAiB,eAEX1B,KAAOC,KAEXD,KAAKP,SAASmB,WAAWsD,GAAG,SAAS,SAASF,GACvChE,KAAKP,SAASuB,aAAa,GAAGmD,QAGjCnE,KAAKP,SAASuB,aAAa,GAAGoD,YAAcpE,KAAKZ,kBACjDY,KAAKP,SAASuB,aAAa,GAAGqD,QAH9BrE,KAAKP,SAASuB,aAAa,GAAGC,WAOlCjB,KAAKP,SAASqB,eAAeoD,GAAG,SAAQ,SAASF,GAC1ChE,KAAKP,SAASyC,iBAAiB,GAAGiC,QAGrCnE,KAAKP,SAASyC,iBAAiBK,KAAK,MAAOvC,KAAKH,IAAIyE,MAAMC,SAC1DvE,KAAKP,SAASyC,iBAAiB,GAAGmC,QAHlCrE,KAAKP,SAASyC,iBAAiB,GAAGjB,WAOtCjB,KAAKP,SAASiB,mBAAmBwD,GAAG,UAAU,SAASF,OACjDQ,UAAY/F,EAAEwB,MAAMU,GAAG,YAC3BX,KAAKH,IAAIQ,OAAOmE,aAGlBxE,KAAKP,SAAS0C,WAAW+B,GAAG,SAAS,SAASF,GAC5ChE,KAAKP,SAASuC,UAAU4B,MAAM,QAG9B5D,KAAKP,SAASqB,eAAeC,OAI1Bf,KAAKV,SAASmE,aACfzD,KAAKR,IAAIC,SAASqC,YAAY,GAAGsC,YAAc,GAE3CpE,KAAKP,SAASuB,aAAa,GAAGe,SAChC/B,KAAKP,SAASuB,aAAa,GAAGC,QAEhCjB,KAAKP,SAASuB,aAAa,GAAGoD,YAAcpE,KAAKZ,kBAGjDV,IAAIK,MAAM,iBAAkBiB,KAAKR,IAAIiF,kBACrC/F,IAAIK,MAAM,yBAA0BiB,KAAK+C,iBACtC/C,KAAKR,IAAIiF,iBAAmBzE,KAAK+C,gBAAgB,IAClD/C,KAAKR,IAAIkF,eAAe1E,KAAK+C,gBAAgB,IAE7C/C,KAAKR,IAAImF,iBAIf3E,KAAKP,SAAS2C,eAAe8B,GAAG,SAAS,WACvClE,KAAKP,SAASuC,UAAU4B,MAAM,QAC9B5D,KAAKR,IAAIC,SAASqC,YAAY,GAAGsC,YAAc,KAGjDpE,KAAKP,SAASuB,aAAa,GAAG4D,aAAe,WACvC5E,KAAKP,SAASuB,aAAa,GAAGoD,aAAepE,KAAK+C,iBACpD/C,KAAKP,SAASuB,aAAa,GAAGC,UAOlC4D,QAAS,IAAIC,OAAO,6CAA8C,KAEpEvD,cAAe,SAASD,WAAYyD,UAC/BzD,gBAEC0D,UADAhF,KAAOC,KAEPgF,aAAa,EACjBxG,EAAE,oCAAoCyG,YAAY,qFAElD5D,WAAW6D,SAAQ,SAASC,KAAMC,KAE5BD,KAAKE,SACLN,UAAY,0CACZC,gBAEAD,UAAY,4CAEhBvG,EAAE,gDAAkD4G,IAAM,MAAME,SAASP,WACtE1D,WAAW4B,QAAU+B,cACpBO,YAAW,WAAWxF,KAAKP,SAAS0C,WAAWtB,QAAQ,WAAW,UAK1EO,cAAe,SAASxB,KAAM6F,QAASC,WAAWC,gBAAiBpF,UAGjE5B,KAAKiH,KAAK,CAAC,CACTC,WAAY,8CACZC,KAAM,CACJlG,KAAMA,KACN6F,QAASA,QACTC,WAAYA,WACZC,gBAAiBA,gBACjBxG,SATOc,KASQd,UAEjB4G,KAAM,SAASC,gBACTC,cAAgBC,KAAKC,MAAMH,YAE7BzF,SADE0F,gBAGO,IAGbG,KAAM,SAASC,KACb3H,IAAIK,MAAMsH,UAMdC,YAAa,mBAEL,iEAAiEC,KAAKC,UAAUC,YAOxFC,YAAa,mBACN,UAAUH,KAAKC,UAAUC"}