{"version":3,"file":"smallreporthelper.min.js","sources":["../src/smallreporthelper.js"],"sourcesContent":["define(['jquery', 'core/log','mod_readaloud/definitions','mod_readaloud/passagemarkuphelper',\n    'core/str','core/ajax','core/templates','core/notification'],\n    function ($, log, def, passagemarkuphelper, str, Ajax,templates, notification) {\n    \"use strict\"; // jshint ;_;\n    /*\n    This file does small report\n     */\n\n    log.debug('Click to hear: initialising');\n\n    return {\n        //controls\n        controls: {},\n        ready: false,\n        remotetranscribe: false,\n        showstats: true,\n        showgrades: true,\n        notingradebook: false,\n        attemptid: 0,\n        checking: '... checking ...',\n        secstillcheck: 'Checking again in: ',\n        notgradedyet: 'Your reading has not been evaluated yet.',\n        evaluated: 'Your reading has been evaluated.',\n        notaddedtogradebook: 'This was a shadow practice, and not added to gradebook.',\n\n        //class definitions\n        cd: {\n            wordclass: def.wordclass,\n            spaceclass: def.spaceclass,\n            badwordclass: def.badwordclass,\n            endspaceclass: def.endspaceclass,\n            unreadwordclass: def.unreadwordclass,\n            unreadspaceclass: def.unreadspaceclass,\n            aiunmatched: def.aiunmatched,\n            passagecontainer: def.passagecontainer,\n            fullreportcontainer: def.fullreportcontainer,\n        },\n\n        //init the module\n        init: function(props){\n\n            //pick up opts from html\n            var theid = props['configcontrolid'];\n            var configcontrol = $('#' + theid).get(0);\n            if (configcontrol) {\n                var opts = JSON.parse(configcontrol.value);\n                $(theid).remove();\n            } else {\n                //if there is no config we might as well give up\n                log.debug('Small Report: No config found on page. Giving up.');\n                return;\n            }\n\n            this.cmid=opts['cmid'];\n            this.attemptid=opts['attemptid'];\n            this.ready=opts['ready'];\n            this.remotetranscribe=opts['remotetranscribe'];\n            this.showstats =opts['showstats'];\n            this.showgrades =opts['showgrades'];\n            this.filename=opts['filename'];\n            this.notingradebook=opts['notingradebook'];\n\n            this.init_strings();\n            this.register_controls();\n            this.register_events();\n\n            //Init the full report passage\n            passagemarkuphelper.init($('.' + this.cd.fullreportcontainer));\n            if(opts['sessionmatches']){\n                passagemarkuphelper.markup_passage(opts['sessionmatches'],opts['sessionerrors'],opts['sessionendword']);\n\n            }\n\n            //if we are ready, we can start checking for results\n            if(!this.ready && this.attemptid){\n                this.start_check_for_results();\n            }\n\n        },\n\n        start_check_for_results: function(){\n            //reset the results display to the pre-data state\n            this.reset_display();\n\n            //if we are doing remote transcribe, we need to check for results\n            if(this.remotetranscribe) {\n                //check for ai results\n                this.check_for_results(this, 15);\n            }\n            //check for audio audio\n            this.check_for_audio(0);\n        },\n\n        init_strings: function(){\n          var that =this;\n          str.get_string('checking','mod_readaloud').done(function(s){that.checking=s;});\n          str.get_string('secs_till_check','mod_readaloud').done(function(s){that.secstillcheck=s;});\n          str.get_string('notgradedyet','mod_readaloud').done(function(s){that.notgradedyet=s;});\n          str.get_string('evaluatedmessage','mod_readaloud').done(function(s){that.evaluated=s;});\n          str.get_string('notaddedtogradebook','mod_readaloud').done(function(s){that.notaddedtogradebook=s;});\n        },\n\n        //load all the controls so we do not have to do it later\n        register_controls: function(){\n            this.controls.heading = $('.' + def.smallreportheading);\n            this.controls.fullreportcontainer = $('.' + def.fullreportcontainer);\n            this.controls.player = $('.' + def.smallreportplayer);\n            this.controls.dummyplayer = $('.' + def.smallreportdummyplayer);\n            this.controls.stars = $('.' + def.smallreportstars);\n            this.controls.cards = $('.' + def.smallreportcards);\n            this.controls.status = $('.' + def.smallreportstatus);\n        },\n\n        //attach the various event handlers we need\n        update_filename: function(filename) {\n            var that = this;\n            that.filename = filename;\n        },\n\n        //attach the various event handlers we need\n        register_events: function() {\n            var that = this;\n        },//end of register events\n\n        check_for_audio: function(waitms){\n            //we commence a series of ping and retries until the recorded file is available\n            var that = this;\n            $.ajax({\n                url: that.filename,\n                method: 'HEAD',\n                cache: false,\n                error: function () {\n                    //We get here if its a 404 or 403. So settimout here and wait for file to arrive\n                    //we increment the timeout period each time to prevent bottlenecks\n                    log.debug('403 errors are normal here, till the audio file arrives back from conversion');\n                    setTimeout(function () {\n                        that.check_for_audio( waitms + 500);\n                    }, waitms);\n                },\n                success: function (data, textStatus, xhr) {\n                    switch (xhr.status) {\n                        case 200:\n\n                            //audioplayer\n                            var tdata=[];\n                            tdata.src=that.filename;\n                            tdata.UNIQID= that.generate_random_string(8);\n                            templates.render('mod_readaloud/audioplayer',tdata).then(\n                                function(html,js){\n                                    //that.controls.player.html(html);\n                                    templates.appendNodeContents('.' + def.smallreportplayer, html, js);\n                                    that.controls.dummyplayer.hide();\n                                }\n                            );\n                            break;\n                        default:\n                            setTimeout(function () {\n                                that.check_for_audio( waitms + 500);\n                            }, waitms);\n                    }\n\n                }\n            });\n        },\n\n       generate_random_string: function(length) {\n            var result = '';\n            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n            var charactersLength = characters.length;\n\n            for (var i = 0; i < length; i++) {\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\n            }\n\n            return result;\n        },\n\n        reset_display: function(){\n            //reset the small report to the default state\n            this.controls.heading.text(this.notgradedyet);\n            this.controls.stars.html('');\n            this.controls.cards.html('');\n            this.controls.status.text(this.notgradedyet);\n            this.controls.status.show();\n            this.controls.fullreportcontainer.hide();\n            this.controls.player.html('');\n            this.controls.dummyplayer.show();\n        },\n\n        check_for_results: function (that, seconds) {\n\n            //decrement 1 s. At 15 seconds do the check\n            seconds=seconds-1;\n            if(seconds>0){\n                setTimeout(that.check_for_results,1000,that,seconds);\n                that.controls.status.text(that.secstillcheck + seconds);\n                return;\n            }\n\n            //do the check\n            that.controls.status.text(that.checking);\n            Ajax.call([{\n                methodname: 'mod_readaloud_check_for_results',\n                args: {\n                    cmid: that.cmid\n                },\n                done: function (ajaxresult) {\n                    var payloadobject = JSON.parse(ajaxresult);\n                    if (payloadobject) {\n                        switch (payloadobject.ready) {\n                            case true:\n                                log.debug('result fetched');\n                                var heading = that.evaluated;\n                                if(that.notingradebook){\n                                    heading = heading + ' ' + that.notaddedtogradebook;\n                                }\n                                that.controls.heading.text(heading);\n                                var tdata=[];\n                                tdata.ready=payloadobject.ready;\n\n                                //stars\n\n                                //if we are not showing grades, everyone gets 5 stars\n                                if(!that.showgrades){payloadobject.rating=5;}\n\n                                var emptystar='fa-regular fa-star';\n                                var solidstar='fa-solid fa-star';\n                                var stars=[];\n                                for(var star=0;star<5;star++){\n                                    stars[star] = payloadobject.rating > star ? solidstar : emptystar;\n                                }\n                                tdata.stars=stars;\n                                templates.render('mod_readaloud/smallreportstars',tdata).then(\n                                    function(html,js){\n                                        that.controls.stars.html(html);\n                                    }\n                                );\n\n                                //stats\n                                //if we are not showing stats, we really should not be here\n                                if(!that.showstats){\n                                    that.controls.status.hide();\n                                    break;\n                                }\n\n                                tdata.wpm=payloadobject.wpm;\n                                tdata.acc=payloadobject.acc;\n                                tdata.totalwords=payloadobject.totalwords;\n\n                                templates.render('mod_readaloud/smallreportcards',tdata).then(\n                                    function(html,js){\n                                        that.controls.cards.html(html);\n                                    }\n                                );\n\n                                that.controls.status.hide();\n\n                                //re-markup the full report passage\n                                log.debug('clearing passage markup');\n                                passagemarkuphelper.clear_markup();\n                                if(that.showstats) {\n                                    log.debug('marking up passage');\n                                    passagemarkuphelper.markup_passage(payloadobject.sessionmatches,\n                                        payloadobject.sessionerrors, payloadobject.sessionendword);\n                                }\n\n                                //show the full report\n                                log.debug('showing full report');\n                                that.controls.fullreportcontainer.show();\n\n                                break;\n\n                            case false:\n                            default:\n                                log.debug('result not fetched');\n                                setTimeout(that.check_for_results,1000,that,10);\n                                that.controls.status.text(that.secstillcheck + seconds);\n                        }\n                    }\n                },\n                fail: notification.exception\n            }]);\n        },\n\n\n    };//end of return value\n});"],"names":["define","$","log","def","passagemarkuphelper","str","Ajax","templates","notification","debug","controls","ready","remotetranscribe","showstats","showgrades","notingradebook","attemptid","checking","secstillcheck","notgradedyet","evaluated","notaddedtogradebook","cd","wordclass","spaceclass","badwordclass","endspaceclass","unreadwordclass","unreadspaceclass","aiunmatched","passagecontainer","fullreportcontainer","init","props","theid","configcontrol","get","opts","JSON","parse","value","remove","cmid","filename","init_strings","register_controls","register_events","this","markup_passage","start_check_for_results","reset_display","check_for_results","check_for_audio","that","get_string","done","s","heading","smallreportheading","player","smallreportplayer","dummyplayer","smallreportdummyplayer","stars","smallreportstars","cards","smallreportcards","status","smallreportstatus","update_filename","waitms","ajax","url","method","cache","error","setTimeout","success","data","textStatus","xhr","tdata","src","UNIQID","generate_random_string","render","then","html","js","appendNodeContents","hide","length","result","characters","charactersLength","i","charAt","Math","floor","random","text","show","seconds","call","methodname","args","ajaxresult","payloadobject","rating","star","wpm","acc","totalwords","clear_markup","sessionmatches","sessionerrors","sessionendword","fail","exception"],"mappings":"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"}