{"version":3,"file":"textutils.min.js","sources":["../src/textutils.js"],"sourcesContent":["define(['jquery', 'core/log','core/ajax'], function ($, log,ajax) {\r\n    \"use strict\"; // jshint ;_;\r\n    /*\r\n    This file helps you get Polly URLs at runtime\r\n     */\r\n\r\n    log.debug('ReadAloud Text Utils: initialising');\r\n\r\n    return {\r\n        token:  '',\r\n        region: '',\r\n        owner: '',\r\n\r\n        setCloudPoodllToken: function(token){\r\n          this.token=token;\r\n        },\r\n\r\n        countWords: function(sentence) {\r\n            // Remove any leading or trailing spaces\r\n            sentence = sentence.trim();\r\n\r\n            // Count the number of spaces in the sentence\r\n            var spaceCount = (sentence.match(/ /g) || []).length;\r\n\r\n            // Add 1 to get the number of words (assuming at least one space)\r\n            return spaceCount + 1;\r\n        },\r\n\r\n\r\n        stripTags: function(input) {\r\n            if(typeof input === \"undefined\" || input == null) return \"\";\r\n            return input.replace(/<[^>]*>/g, '');\r\n        },\r\n\r\n        getSelectedWord: function () {\r\n\r\n            var selectedText = \"\";\r\n            if (window.getSelection) {\r\n                selectedText = window.getSelection().toString();\r\n            } else if (document.selection && document.selection.type !== \"Control\") {\r\n                selectedText = document.selection.createRange().text;\r\n            }\r\n            if (selectedText.length > 0){\r\n                var words = selectedText.split(/\\s+/);\r\n                // Get the first word\r\n                if (words.length > 0) {\r\n                    return words[0];\r\n                }\r\n            }\r\n            return selectedText;\r\n        },\r\n\r\n        analyzeText: function (text) {\r\n\r\n            //tidy it up\r\n            text=this.stripTags(text);\r\n\r\n            // Count the number of words\r\n            const words = text.split(/\\s+/);\r\n            const wordCount = words.length;\r\n            const totalChars = text.length;\r\n\r\n            // Calculate the average word length\r\n            const totalWordLength = words.reduce((acc, word) => acc + word.length, 0);\r\n            const averageWordLength = (totalWordLength / wordCount).toFixed(1);\r\n\r\n            // Count the number of sentences\r\n            const sentences = text.split(/[.!?]+/);\r\n            var sentenceCount = sentences.length - 1; // Ignore the last element\r\n            if(sentenceCount<1 && wordCount>0){sentenceCount=1;}//if no punctuation, then we have one sentence\r\n\r\n            // Calculate the average sentence length\r\n            var totalSentenceLength =0;\r\n            for (var i =0; i<sentences.length;i++){\r\n                totalSentenceLength += this.countWords(sentences[i]);\r\n            }\r\n            // const totalSentenceLength = sentences.reduce((acc, sentence) => acc + sentence.length, 0);\r\n            var averageSentenceLength = 0;\r\n            if(sentenceCount>0) {\r\n                averageSentenceLength = (totalSentenceLength / sentenceCount).toFixed(1);\r\n            }\r\n\r\n            var stats = {\r\n                charCount: totalChars,\r\n                wordCount: wordCount,\r\n                avWordLength: averageWordLength,\r\n                sentenceCount: sentenceCount,\r\n                avSentenceLength: averageSentenceLength,\r\n            };\r\n            return stats;\r\n        },\r\n\r\n       cleanWord: function(inputWord) {\r\n            // Convert to lowercase\r\n            var lowercaseWord = inputWord.toLowerCase();\r\n            // Remove leading and trailing whitespace and punctuation\r\n            var cleanedWord = lowercaseWord.replace(/^[^\\w]+|[^\\w]+$/g, '');\r\n            return cleanedWord;\r\n        },\r\n\r\n        downloadTextContent: function(textcontent, fileName) {\r\n\r\n            var blob = new Blob([textcontent], { type: 'text/plain' });\r\n            var link = document.createElement('a');\r\n\r\n            link.href = window.URL.createObjectURL(blob);\r\n            link.download = fileName;\r\n\r\n            // Append the link to the document and trigger a click event to start the download\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            // Remove the link from the document\r\n            document.body.removeChild(link);\r\n        },\r\n\r\n        //FUNCTION rewrite article\r\n        call_ai: function(prompt, language,subject,action, callback) {\r\n\r\n            //The REST API we are calling\r\n            var functionname = 'local_cpapi_call_ai';\r\n\r\n            //fetch the Posturl. We need this.\r\n            //set up our ajax request\r\n            var xhr = new XMLHttpRequest();\r\n            var that = this;\r\n\r\n            //set up our handler for the response\r\n            xhr.onreadystatechange = function (e) {\r\n                if (this.readyState === 4) {\r\n                    if (xhr.status == 200) {\r\n\r\n                        //get a yes or forgetit or tryagain\r\n                        var payload = xhr.responseText;\r\n                        var payloadobject = JSON.parse(payload);\r\n                        if (payloadobject) {\r\n                            //returnCode > 0  indicates an error\r\n                            if (payloadobject.returnCode > 0) {\r\n                                console.log(payloadobject.returnMessage);\r\n                                return false;\r\n                                //if all good, then lets do the embed\r\n                            } else if (payloadobject.returnCode === 0){\r\n                                var pollyurl = payloadobject.returnMessage;\r\n                                callback(pollyurl);\r\n                            } else {\r\n                                console.log(' Request failed:');\r\n                                console.log(payloadobject);\r\n                            }\r\n                        } else {\r\n                            console.log(' Request something bad happened');\r\n                        }\r\n                    } else {\r\n                        console.log('Request Not 200 response:' + xhr.status);\r\n                    }\r\n                }\r\n            };\r\n\r\n            //make our request\r\n            var xhrparams = \"wstoken=\" + this.token\r\n                + \"&wsfunction=\" + functionname\r\n                + \"&moodlewsrestformat=\" + 'json'\r\n                + \"&prompt=\" + encodeURIComponent(prompt)\r\n                + \"&language=\" + language\r\n                + \"&subject=\" + subject\r\n                + \"&action=\" + action\r\n                + '&appid=' + 'mod_readaloud'\r\n                + '&owner=poodll'\r\n                + '&region=useast1';\r\n\r\n            var serverurl = 'https://cloud.poodll.com' + \"/webservice/rest/server.php\";\r\n            xhr.open(\"POST\", serverurl, true);\r\n            xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            xhr.send(xhrparams);\r\n        },\r\n\r\n\r\n        init: function(token, region, owner){\r\n                this.token =token;\r\n                this.region=region;\r\n                this.owner=owner;\r\n            },\r\n\r\n        clean_ssml_chars: function(speaktext){\r\n            //deal with SSML reserved characters\r\n            speaktext =  speaktext.replace(/&/g,'&amp;');\r\n            speaktext = speaktext.replace(/'/g,'&apos;');\r\n            speaktext= speaktext.replace(/\"/g,'&quot;');\r\n            speaktext = speaktext.replace(/</g,'&lt;');\r\n            speaktext =  speaktext.replace(/>/g,'&gt;');\r\n            return speaktext;\r\n        },\r\n\r\n        can_speak_neural: function(voice,region){\r\n            switch(region){\r\n                case \"useast1\":\r\n                case \"tokyo\":\r\n                case \"sydney\":\r\n                case \"dublin\":\r\n                case \"ottawa\":\r\n                case \"frankfurt\":\r\n                case \"london\":\r\n                case \"singapore\":\r\n                case \"capetown\":\r\n                    //ok\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            //check if the voice is supported\r\n            if(def.neural_voices.indexOf(voice) !== -1){\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n\r\n        },\r\n\r\n        fetch_polly_url: function(speaktext,voiceoption, voice) {\r\n            var that = this;\r\n            return new Promise(function(resolve,reject){\r\n                //The REST API we are calling\r\n                var functionname = 'local_cpapi_fetch_polly_url';\r\n\r\n                //fetch the Posturl. We need this.\r\n                //set up our ajax request\r\n                var xhr = new XMLHttpRequest();\r\n\r\n                //in the case we get a bad voice we just reject without calling the web service\r\n                if(voice == 'ttsnone'){\r\n                    reject('textutils fetch_polly_url: ttsnone is not a valid voice');\r\n                    log.debug('textutils fetch_polly_url: ttsnone is not a valid voice');\r\n                }\r\n\r\n                //set up our handler for the response\r\n                xhr.onreadystatechange = function (e) {\r\n                    if (this.readyState === 4) {\r\n                        if (xhr.status == 200) {\r\n\r\n                            //get a yes or forgetit or tryagain\r\n                            var payload = xhr.responseText;\r\n                            var payloadobject = JSON.parse(payload);\r\n                            if (payloadobject) {\r\n                                //returnCode > 0  indicates an error\r\n                                if (payloadobject.returnCode > 0) {\r\n                                    reject(payloadobject.returnMessage);\r\n                                    log.debug(payloadobject.returnMessage);\r\n                                    return false;\r\n                                    //if all good, then lets do the embed\r\n                                } else if (payloadobject.returnCode === 0){\r\n                                    var pollyurl = payloadobject.returnMessage;\r\n                                    resolve(pollyurl);\r\n                                } else {\r\n                                    reject('Polly Signed URL Request failed:');\r\n                                    log.debug('Polly Signed URL Request failed:');\r\n                                    log.debug(payloadobject);\r\n                                }\r\n                            } else {\r\n                                reject('Polly Signed URL Request something bad happened');\r\n                                log.debug('Polly Signed URL Request something bad happened');\r\n                            }\r\n                        } else {\r\n                            reject('Polly Signed URL Request Not 200 response:' + xhr.status);\r\n                            log.debug('Polly Signed URL Request Not 200 response:' + xhr.status);\r\n                        }\r\n                    }\r\n                };\r\n                var texttype='ssml';\r\n\r\n                switch(parseInt(voiceoption)){\r\n\r\n                    //slow\r\n                    case 1:\r\n                        //fetch slightly slower version of speech\r\n                        //rate = 'slow' or 'x-slow' or 'medium'\r\n                        speaktext =that.clean_ssml_chars(speaktext);\r\n                        speaktext = '<speak><break time=\"1000ms\"></break><prosody rate=\"slow\">' + speaktext + '</prosody></speak>';\r\n                        break;\r\n                    //veryslow\r\n                    case 2:\r\n                        //fetch slightly slower version of speech\r\n                        //rate = 'slow' or 'x-slow' or 'medium'\r\n                        speaktext =that.clean_ssml_chars(speaktext);\r\n                        speaktext = '<speak><break time=\"1000ms\"></break><prosody rate=\"x-slow\">' + speaktext + '</prosody></speak>';\r\n                        break;\r\n                    //ssml\r\n                    case 3:\r\n                        speaktext='<speak>' + speaktext + '</speak>';\r\n                        break;\r\n\r\n                    //normal\r\n                    case 0:\r\n                    default:\r\n                        //fetch slightly slower version of speech\r\n                        //rate = 'slow' or 'x-slow' or 'medium'\r\n                        speaktext =that.clean_ssml_chars(speaktext);\r\n                        speaktext = '<speak><break time=\"1000ms\"></break>' + speaktext + '</speak>';\r\n                        break;\r\n\r\n                }\r\n\r\n                //to use the neural or standard synthesis engine\r\n                var engine = that.can_speak_neural(voice,that.region) ?'neural' : 'standard';\r\n\r\n                //log.debug(params);\r\n                var xhrparams = \"wstoken=\" + that.token\r\n                + \"&wsfunction=\" + functionname\r\n                + \"&moodlewsrestformat=\" + 'json'\r\n                + \"&text=\" + encodeURIComponent(speaktext)\r\n                + '&texttype=' + texttype\r\n                + '&voice=' + voice\r\n                + '&appid=' + def.component\r\n                + '&owner=' + that.owner\r\n                + '&region=' + that.region\r\n                + '&engine=' + engine;\r\n\r\n                var serverurl = def.cloudpoodllurl + \"/webservice/rest/server.php\";\r\n                xhr.open(\"POST\", serverurl, true);\r\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                xhr.send(xhrparams);\r\n            });\r\n        }\r\n\r\n    };//end of return value\r\n});\r\n"],"names":["define","$","log","ajax","debug","token","region","owner","setCloudPoodllToken","countWords","sentence","trim","match","length","stripTags","input","replace","getSelectedWord","selectedText","window","getSelection","toString","document","selection","type","createRange","text","words","split","analyzeText","this","wordCount","totalChars","averageWordLength","reduce","acc","word","toFixed","sentences","sentenceCount","totalSentenceLength","i","averageSentenceLength","charCount","avWordLength","avSentenceLength","cleanWord","inputWord","toLowerCase","downloadTextContent","textcontent","fileName","blob","Blob","link","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","call_ai","prompt","language","subject","action","callback","xhr","XMLHttpRequest","onreadystatechange","e","readyState","status","payload","responseText","payloadobject","JSON","parse","returnCode","console","returnMessage","pollyurl","xhrparams","encodeURIComponent","open","setRequestHeader","send","init","clean_ssml_chars","speaktext","can_speak_neural","voice","def","neural_voices","indexOf","fetch_polly_url","voiceoption","that","Promise","resolve","reject","parseInt","engine","component","serverurl","cloudpoodllurl"],"mappings":"AAAAA,iCAAO,CAAC,SAAU,WAAW,cAAc,SAAUC,EAAGC,IAAIC,aAMxDD,IAAIE,MAAM,sCAEH,CACHC,MAAQ,GACRC,OAAQ,GACRC,MAAO,GAEPC,oBAAqB,SAASH,YACvBA,MAAMA,OAGbI,WAAY,SAASC,kBAEjBA,SAAWA,SAASC,QAGOC,MAAM,OAAS,IAAIC,OAG1B,GAIxBC,UAAW,SAASC,mBACI,IAAVA,OAAkC,MAATA,MAAsB,GAClDA,MAAMC,QAAQ,WAAY,KAGrCC,gBAAiB,eAETC,aAAe,MACfC,OAAOC,aACPF,aAAeC,OAAOC,eAAeC,WAC9BC,SAASC,WAAyC,YAA5BD,SAASC,UAAUC,OAChDN,aAAeI,SAASC,UAAUE,cAAcC,MAEhDR,aAAaL,OAAS,EAAE,KACpBc,MAAQT,aAAaU,MAAM,UAE3BD,MAAMd,OAAS,SACRc,MAAM,UAGdT,cAGXW,YAAa,SAAUH,YAMbC,OAHND,KAAKI,KAAKhB,UAAUY,OAGDE,MAAM,OACnBG,UAAYJ,MAAMd,OAClBmB,WAAaN,KAAKb,OAIlBoB,mBADkBN,MAAMO,QAAO,CAACC,IAAKC,OAASD,IAAMC,KAAKvB,QAAQ,GAC1BkB,WAAWM,QAAQ,GAG1DC,UAAYZ,KAAKE,MAAM,cACzBW,cAAgBD,UAAUzB,OAAS,EACpC0B,cAAc,GAAKR,UAAU,IAAGQ,cAAc,WAG7CC,oBAAqB,EAChBC,EAAG,EAAGA,EAAEH,UAAUzB,OAAO4B,IAC9BD,qBAAuBV,KAAKrB,WAAW6B,UAAUG,QAGjDC,sBAAwB,SACzBH,cAAc,IACbG,uBAAyBF,oBAAsBD,eAAeF,QAAQ,IAG9D,CACRM,UAAWX,WACXD,UAAWA,UACXa,aAAcX,kBACdM,cAAeA,cACfM,iBAAkBH,wBAK3BI,UAAW,SAASC,kBAEKA,UAAUC,cAEEhC,QAAQ,mBAAoB,KAIhEiC,oBAAqB,SAASC,YAAaC,cAEnCC,KAAO,IAAIC,KAAK,CAACH,aAAc,CAAE1B,KAAM,eACvC8B,KAAOhC,SAASiC,cAAc,KAElCD,KAAKE,KAAOrC,OAAOsC,IAAIC,gBAAgBN,MACvCE,KAAKK,SAAWR,SAGhB7B,SAASsC,KAAKC,YAAYP,MAC1BA,KAAKQ,QAGLxC,SAASsC,KAAKG,YAAYT,OAI9BU,QAAS,SAASC,OAAQC,SAASC,QAAQC,OAAQC,cAO3CC,IAAM,IAAIC,eAIdD,IAAIE,mBAAqB,SAAUC,MACP,IAApB3C,KAAK4C,cACa,KAAdJ,IAAIK,OAAe,KAGfC,QAAUN,IAAIO,aACdC,cAAgBC,KAAKC,MAAMJ,YAC3BE,cAAe,IAEXA,cAAcG,WAAa,SAC3BC,QAAQhF,IAAI4E,cAAcK,gBACnB,EAEJ,GAAiC,IAA7BL,cAAcG,WAAiB,KAClCG,SAAWN,cAAcK,cAC7Bd,SAASe,eAETF,QAAQhF,IAAI,oBACZgF,QAAQhF,IAAI4E,oBAGhBI,QAAQhF,IAAI,wCAGhBgF,QAAQhF,IAAI,4BAA8BoE,IAAIK,aAMtDU,UAAY,WAAavD,KAAKzB,MAAlB,kEAGGiF,mBAAmBrB,QAChC,aAAeC,SACf,YAAcC,QACd,WAAaC,OANH,mDAYhBE,IAAIiB,KAAK,OADO,uDACY,GAC5BjB,IAAIkB,iBAAiB,gBAAiB,YACtClB,IAAIkB,iBAAiB,eAAgB,qCACrClB,IAAImB,KAAKJ,YAIbK,KAAM,SAASrF,MAAOC,OAAQC,YACjBF,MAAOA,WACPC,OAAOA,YACPC,MAAMA,OAGnBoF,iBAAkB,SAASC,kBAMvBA,WADAA,WADAA,WADAA,WADAA,UAAaA,UAAU5E,QAAQ,KAAK,UACdA,QAAQ,KAAK,WACdA,QAAQ,KAAK,WACZA,QAAQ,KAAK,SACZA,QAAQ,KAAK,SAIxC6E,iBAAkB,SAASC,MAAMxF,eACtBA,YACE,cACA,YACA,aACA,aACA,aACA,gBACA,aACA,gBACA,gCAIM,SAI0B,IAAtCyF,IAAIC,cAAcC,QAAQH,QAQjCI,gBAAiB,SAASN,UAAUO,YAAaL,WACzCM,KAAOtE,YACJ,IAAIuE,SAAQ,SAASC,QAAQC,YAM5BjC,IAAM,IAAIC,eAGF,WAATuB,QACCS,OAAO,2DACPrG,IAAIE,MAAM,4DAIdkE,IAAIE,mBAAqB,SAAUC,MACP,IAApB3C,KAAK4C,cACa,KAAdJ,IAAIK,OAAe,KAGfC,QAAUN,IAAIO,aACdC,cAAgBC,KAAKC,MAAMJ,YAC3BE,cAAe,IAEXA,cAAcG,WAAa,SAC3BsB,OAAOzB,cAAcK,eACrBjF,IAAIE,MAAM0E,cAAcK,gBACjB,EAEJ,GAAiC,IAA7BL,cAAcG,WAAiB,KAClCG,SAAWN,cAAcK,cAC7BmB,QAAQlB,eAERmB,OAAO,oCACPrG,IAAIE,MAAM,oCACVF,IAAIE,MAAM0E,oBAGdyB,OAAO,mDACPrG,IAAIE,MAAM,wDAGdmG,OAAO,6CAA+CjC,IAAIK,QAC1DzE,IAAIE,MAAM,6CAA+CkE,IAAIK,gBAMlE6B,SAASL,mBAGP,EAIDP,UAAY,6DADZA,UAAWQ,KAAKT,iBAAiBC,YACqD,gCAGrF,EAIDA,UAAY,+DADZA,UAAWQ,KAAKT,iBAAiBC,YACuD,gCAGvF,EACDA,UAAU,UAAYA,UAAY,yBASlCA,UAAY,wCADZA,UAAWQ,KAAKT,iBAAiBC,YACgC,eAMrEa,OAASL,KAAKP,iBAAiBC,MAAMM,KAAK9F,QAAS,SAAW,WAG9D+E,UAAY,WAAae,KAAK/F,MAAlB,wEAGHiF,mBAAmBM,WAHhB,wBAKFE,MACZ,UAAYC,IAAIW,UAChB,UAAYN,KAAK7F,MACjB,WAAa6F,KAAK9F,OAClB,WAAamG,OAEXE,UAAYZ,IAAIa,eAAiB,8BACrCtC,IAAIiB,KAAK,OAAQoB,WAAW,GAC5BrC,IAAIkB,iBAAiB,gBAAiB,YACtClB,IAAIkB,iBAAiB,eAAgB,qCACrClB,IAAImB,KAAKJ"}