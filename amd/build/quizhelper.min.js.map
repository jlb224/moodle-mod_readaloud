{"version":3,"file":"quizhelper.min.js","sources":["../src/quizhelper.js"],"sourcesContent":["define(['jquery', 'core/log', 'mod_readaloud/definitions', 'core/templates', 'core/ajax','mod_readaloud/pollyhelper',\r\n    'mod_readaloud/multichoice', 'mod_readaloud/multiaudio',\r\n        'mod_readaloud/page', 'mod_readaloud/shortanswer',\r\n        'mod_readaloud/listeninggapfill', 'mod_readaloud/typinggapfill', 'mod_readaloud/speakinggapfill',\r\n        'mod_readaloud/freespeaking', 'mod_readaloud/freewriting'],\r\n  function($, log, def, templates, Ajax, polly, multichoice, multiaudio,\r\n           page, shortanswer, listeninggapfill, typinggapfill, speakinggapfill, freespeaking, freewriting) {\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    /*\r\n    This file is to manage the quiz stage\r\n     */\r\n\r\n    log.debug('Readaloud Quiz helper: initialising');\r\n\r\n    return {\r\n\r\n      //original spliton_regexp: new RegExp(/([,.!?:;\" ])/, 'g'),\r\n        // V2 spliton_regexp new RegExp(/([!\"# ¡¿$%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\r\n        //v3 we removed the apostrophe because it was not counting words correcting in listen and speak\r\n      spliton_regexp: new RegExp(/([!\"# ¡¿$%&()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~])/, 'g'),\r\n      //nopunc is diff to split on because it does not match on spaces\r\n      nopunc_regexp: new RegExp(/[!\"#¡¿$%&'()。「」、*+,-.\\/:;<=>?@[\\]^_`{|}~]/,'g'),\r\n      nonspaces_regexp: new RegExp(/[^ ]/,'g'),\r\n      autoplaydelay: 800,\r\n\r\n      controls: {},\r\n      submitbuttonclass: 'mod_readaloud_quizsubmitbutton',\r\n      stepresults: [],\r\n\r\n      init: function( activitydata, cmid, attemptid) {\r\n        log.debug(activitydata);\r\n        this.quizdata = activitydata.quizdata;\r\n        this.region = activitydata.region;\r\n        this.ttslanguage = activitydata.ttslanguage;\r\n        this.controls.quizcontainer = $(\".\" + activitydata.quizcontainer);\r\n        this.controls.quizitemscontainer = $(\".\" + activitydata.quizitemscontainer);\r\n        this.controls.quizresultscontainer = $(\".\" + activitydata.quizresultscontainer);\r\n        this.attemptid = attemptid;\r\n        this.courseurl = activitydata.courseurl;\r\n        this.cmid = cmid;\r\n        this.reattempturl = decodeURIComponent(activitydata.reattempturl).replace(/&amp;/g, \"&\");\r\n        this.activityurl = decodeURIComponent(activitydata.activityurl).replace(/&amp;/g, \"&\");\r\n        this.backtocourse = activitydata.backtocourse;\r\n        this.stt_guided = activitydata.stt_guided;\r\n        this.wwwroot = activitydata.wwwroot;\r\n        this.useanimatecss  = activitydata.useanimatecss;\r\n        this.showqreview  = activitydata.showqreview;\r\n        \r\n  \r\n\r\n        polly.init(this.quizdata.token,this.quizdata.region,this.quizdata.owner);\r\n        this.prepare_html();\r\n        this.init_questions(this.quizdata);\r\n        this.register_events();\r\n        this.start_quiz();\r\n      },\r\n\r\n      // Callback for when the quiz is complete, overridden by activity controller.\r\n      on_complete: function() {},\r\n\r\n      prepare_html: function() {\r\n\r\n        // this.controls.quizcontainer.append(submitbutton);\r\n        this.controls.quizfinished=$(\"#mod_readaloud_quiz_finished\");\r\n\r\n      },\r\n\r\n      init_questions: function(quizdata) {\r\n        var dd = this;\r\n        $.each(quizdata, function(index, item) {\r\n          switch (item.type) {\r\n            case def.qtype_multichoice:\r\n              multichoice.clone().init(index, item, dd);\r\n              break;\r\n            case def.qtype_multiaudio:\r\n                multiaudio.clone().init(index, item, dd);\r\n                break;\r\n\r\n             case def.qtype_page:\r\n                  page.clone().init(index, item, dd);\r\n                  break;\r\n\r\n              case def.qtype_shortanswer:\r\n                  shortanswer.clone().init(index, item, dd);\r\n                  break;\r\n\r\n              case def.qtype_listeninggapfill:\r\n                  listeninggapfill.clone().init(index, item, dd);\r\n                  break;\r\n\r\n              case def.qtype_typinggapfill:\r\n                  typinggapfill.clone().init(index, item, dd);\r\n                  break;\r\n\r\n              case def.qtype_speakinggapfill:\r\n                  speakinggapfill.clone().init(index, item, dd);\r\n                  break;\r\n\r\n              case def.qtype_freespeaking:\r\n                freespeaking.clone().init(index, item, dd);\r\n                break;\r\n                \r\n              case def.qtype_freewriting:\r\n                freewriting.clone().init(index, item, dd);\r\n                break;\r\n                \r\n          }\r\n\r\n        });\r\n\r\n        //TTS in question headers\r\n          $(\"audio.mod_readaloud_itemttsaudio\").each(function(){\r\n              var that=this;\r\n              polly.fetch_polly_url($(this).data('text'), $(this).data('ttsoption'), $(this).data('voice')).then(function(audiourl) {\r\n                  $(that).attr(\"src\", audiourl);\r\n              });\r\n          });\r\n\r\n      },\r\n\r\n      register_events: function() {\r\n        $('.' + this.submitbuttonclass).on('click', function() {\r\n          //do something\r\n        });\r\n      },\r\n      render_quiz_progress:function(current,total){\r\n        var array = [];\r\n        for(var i=0;i<total;i++){\r\n          array.push(i);\r\n        }\r\n\r\n        if(total<6) {\r\n            var slice = array.slice(0, 5);\r\n            var linestyles = \"width: \" + (100 - 100 / slice.length) + \"%; margin-left: auto; margin-right: auto\";\r\n            var html = \"<div class='readaloud_quiz_progress_line' style='\" + linestyles + \"'></div>\";\r\n\r\n            slice.forEach(function (i) {\r\n                html += \"<div class='readaloud_quiz_progress_item \" + (i === current ? 'readaloud_quiz_progress_item_current' : '') + \" \" + (i < current ? 'readaloud_quiz_progress_item_completed' : '') + \"'>\" + (i + 1) + \"</div>\";\r\n            });\r\n        }else {\r\n             if(current > total-6){\r\n                 var slice = array.slice(total-5, total-1);\r\n             }else{\r\n                 var slice = array.slice(current, current + 4);\r\n             }\r\n\r\n              //if first item is visible then no line trailing left of item 1\r\n              if(current==0){\r\n                  var linestyles = \"width: 80%; margin-left: auto; margin-right: auto\";\r\n              }else {\r\n                  var linestyles = \"width: \" + (100 - 100 / (2 *slice.length)) + \"%; margin-left: 0\";\r\n              }\r\n            var html = \"<div class='readaloud_quiz_progress_line' style='\" + linestyles + \"'></div>\";\r\n              slice.forEach(function (i) {\r\n                  html += \"<div class='readaloud_quiz_progress_item \" + (i === current ? 'readaloud_quiz_progress_item_current' : '') + \" \" + (i < current ? 'readaloud_quiz_progress_item_completed' : '') + \"'>\" + (i + 1) + \"</div>\";\r\n              });\r\n              //end marker\r\n            html += \"<div class='readaloud_quiz_progress_finalitem'>\" + (total) + \"</div>\";\r\n          }\r\n\r\n        html+=\"\";\r\n        $(\".readaloud_quiz_progress\").html(html);\r\n\r\n      },\r\n\r\n      do_next: function(stepdata){\r\n        var dd = this;\r\n        //get current question\r\n        var currentquizdataindex =   stepdata.index;\r\n        var currentitem = this.quizdata[currentquizdataindex];\r\n\r\n        //in preview mode do no do_next\r\n        if(currentitem.preview===true){return;}\r\n\r\n        //post grade\r\n         // log.debug(\"reporting step grade\");\r\n        dd.report_step_grade(stepdata);\r\n         // log.debug(\"reported step grade\");\r\n        \r\n        var theoldquestion = $(\"#\" + currentitem.uniqueid + \"_container\");\r\n        \r\n        //show next question or End Screen\r\n        if (dd.quizdata.length > currentquizdataindex+1) {\r\n          var nextindex = currentquizdataindex+ 1;\r\n          var nextitem = this.quizdata[nextindex];\r\n          //hide current question\r\n          theoldquestion.hide();\r\n            //show the question\r\n            $(\"#\" + nextitem.uniqueid + \"_container\").show();\r\n          //any per question type init that needs to occur can go here\r\n          switch (nextitem.type) {\r\n              case def.qtype_speechcards:\r\n                  //speechcards.init(nextindex, nextitem, dd);\r\n                  break;\r\n              case def.qtype_dictation:\r\n              case def.qtype_dictationchat:\r\n              case def.qtype_multichoice:\r\n              case def.qtype_multiaudio:\r\n              case def.qtype_listenrepeat:\r\n              case def.qtype_smartframe:\r\n              case def.qtype_shortanswer:\r\n              case def.qtype_spacegame:\r\n              case def.qtype_fluency:\r\n              case def.qtype_freespeaking:\r\n              case def.qtype_freewriting:\r\n              case def.qtype_passagereading:\r\n              case def.qtype_buttonquiz:\r\n              case def.qtype_conversation:\r\n              case def.qtype_compquiz:\r\n              default:\r\n          }//end of nextitem switch\r\n\r\n            //autoplay audio if we need to\r\n            var ttsquestionplayer = $(\"#\" + nextitem.uniqueid + \"_container audio.mod_readaloud_itemttsaudio\");\r\n            if(ttsquestionplayer.data('autoplay')==\"1\"){\r\n                var that=this;\r\n                setTimeout(function() {ttsquestionplayer[0].play();}, that.autoplaydelay);\r\n            }\r\n\r\n        } else {\r\n            // Alert server and activity controller that the quiz is complete\r\n            dd.on_complete();\r\n\r\n            //just reload and re-fetch all the data to display\r\n              $(\".readaloud_nextbutton\").prop(\"disabled\", true);\r\n              //fetch the results and display them\r\n              var resultpromise = Ajax.call([{\r\n                methodname: 'mod_readaloud_fetch_quiz_results',\r\n                args: {\r\n                  cmid: dd.cmid\r\n                },\r\n                async: false\r\n              }])[0];\r\n            //load the results into the quiz finished container\r\n            resultpromise.then(function(jsonresults){\r\n                var results = JSON.parse(jsonresults);\r\n                log.debug(results);\r\n                templates.render('mod_readaloud/quizfinished', results).then(\r\n                  function(html,js){\r\n                      dd.controls.quizresultscontainer.html(html);\r\n                      dd.controls.quizresultscontainer.show();\r\n                      dd.controls.quizitemscontainer.hide();\r\n                      templates.runTemplateJS(js);\r\n                });\r\n            });\r\n            return;\r\n        \r\n        }//end of if has more questions\r\n\r\n        dd.render_quiz_progress(stepdata.index+1,this.quizdata.length);\r\n        //we want to destroy the old question in the DOM also because iframe/media content might be playing\r\n        theoldquestion.remove();\r\n        \r\n      },\r\n\r\n      report_step_grade: function(stepdata) {\r\n        var dd = this;\r\n\r\n        //store results locally\r\n        this.stepresults.push(stepdata);\r\n\r\n        //push results to server\r\n        var ret = Ajax.call([{\r\n          methodname: 'mod_readaloud_report_quizstep_grade',\r\n          args: {\r\n            cmid: dd.cmid,\r\n            step: JSON.stringify(stepdata),\r\n          },\r\n          async: false\r\n        }])[0];\r\n        log.debug(\"report_step_grade success: \" + ret);\r\n\r\n      },\r\n\r\n\r\n\r\n      start_quiz: function() {\r\n        if (this.quizdata == null || this.quizdata.length == 0) { return; }\r\n        $(\"#\" + this.quizdata[0].uniqueid + \"_container\").show();\r\n          //autoplay audio if we need to\r\n          var ttsquestionplayer = $(\"#\" + this.quizdata[0].uniqueid + \"_container audio.mod_readaloud_itemttsaudio\");\r\n          if(ttsquestionplayer.data('autoplay')==\"1\"){\r\n              var that=this;\r\n              setTimeout(function() {ttsquestionplayer[0].play();}, that.autoplaydelay);\r\n          }\r\n        this.render_quiz_progress(0,this.quizdata.length);\r\n      },\r\n\r\n      //this function is overridden by the calling class\r\n      onSubmit: function() {\r\n        alert('quiz submitted. Override this');\r\n      },\r\n\r\n        mobile_user: function() {\r\n\r\n            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        chrome_user: function(){\r\n            if(/Chrome/i.test(navigator.userAgent)) {\r\n                return true;\r\n            }else{\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //this will always be true these days\r\n        use_ttrecorder: function(){\r\n            return true;\r\n        },\r\n        is_stt_guided: function(){\r\n          return this.stt_guided;\r\n        },\r\n\r\n        //count words\r\n        count_words: function(transcript) {\r\n          return transcript.trim().split(/\\s+/).filter(function(word) {\r\n              return word.length > 0;\r\n          }).length;\r\n        },\r\n\r\n        //text comparison functions follow===============\r\n\r\n        similarity: function(s1, s2) {\r\n            //we remove spaces because JP transcript and passage might be different. And who cares about spaces anyway?\r\n            s1 = s1.replace(/\\s+/g, '');\r\n            s2 = s2.replace(/\\s+/g, '');\r\n\r\n            var longer = s1;\r\n            var shorter = s2;\r\n            if (s1.length < s2.length) {\r\n                longer = s2;\r\n                shorter = s1;\r\n            }\r\n            var longerLength = longer.length;\r\n            if (longerLength === 0) {\r\n                return 100;\r\n            }\r\n            return 100 * ((longerLength - this.editDistance(longer, shorter)) / parseFloat(longerLength));\r\n        },\r\n        editDistance: function(s1, s2) {\r\n            s1 = s1.toLowerCase();\r\n            s2 = s2.toLowerCase();\r\n\r\n            var costs = [];\r\n            for (var i = 0; i <= s1.length; i++) {\r\n                var lastValue = i;\r\n                for (var j = 0; j <= s2.length; j++) {\r\n                    if (i === 0) {\r\n                        costs[j] = j;\r\n                    }else {\r\n                        if (j > 0) {\r\n                            var newValue = costs[j - 1];\r\n                            if (s1.charAt(i - 1) !== s2.charAt(j - 1)) {\r\n                                newValue = Math.min(Math.min(newValue, lastValue),\r\n                                    costs[j]) + 1;\r\n                            }\r\n                            costs[j - 1] = lastValue;\r\n                            lastValue = newValue;\r\n                        }\r\n                    }\r\n                }\r\n                if (i > 0) {\r\n                    costs[s2.length] = lastValue;\r\n                }\r\n            }\r\n            return costs[s2.length];\r\n        },\r\n\r\n        cleanText: function(text) {\r\n            var lowertext = text.toLowerCase();\r\n            var punctuationless = lowertext.replace(this.nopunc_regexp,\"\");\r\n            var ret = punctuationless.replace(/\\s+/g, \" \").trim();\r\n            return ret;\r\n        },\r\n\r\n        //this will return the promise, the result of which is an integer 100 being perfect match, 0 being no match\r\n        checkByPhonetic: function(passage, transcript, passagephonetic, language) {\r\n            return Ajax.call([{\r\n                methodname: 'mod_readaloud_check_by_phonetic',\r\n                args: {\r\n                    'spoken': transcript,\r\n                    'correct': passage,\r\n                    'language': language,\r\n                    'phonetic': passagephonetic,\r\n                    'region': this.region,\r\n                    'cmid': this.cmid\r\n                },\r\n                async: false\r\n            }])[0];\r\n\r\n        },\r\n\r\n       comparePassageToTranscript: function (passage,transcript,passagephonetic,language,alternatives=\"\"){\r\n          return Ajax.call([{\r\n               methodname: 'mod_readaloud_compare_passage_to_transcript',\r\n               args: {\r\n                   passage: passage,\r\n                   transcript: transcript,\r\n                   //alternatives: alternatives,\r\n                   passagephonetic: '',//passagephonetic,\r\n                   language: language,\r\n                   //region: this.region,\r\n                   cmid: this.cmid\r\n               },\r\n              async: false\r\n           }])[0];\r\n       },\r\n\r\n      //this will return the promise, the result of which is an integer 100 being perfect match, 0 being no match\r\n      evaluateTranscript: function(transcript, itemid) {\r\n        return Ajax.call([{\r\n            methodname: 'mod_readaloud_evaluate_transcript',\r\n            args: {\r\n                'transcript': transcript,\r\n                'itemid': itemid,\r\n                'cmid': this.cmid\r\n            },\r\n            async: false\r\n        }])[0];\r\n      },\r\n\r\n    }; //end of return value\r\n  });\r\n"],"names":["define","$","log","def","templates","Ajax","polly","multichoice","multiaudio","page","shortanswer","listeninggapfill","typinggapfill","speakinggapfill","freespeaking","freewriting","debug","spliton_regexp","RegExp","nopunc_regexp","nonspaces_regexp","autoplaydelay","controls","submitbuttonclass","stepresults","init","activitydata","cmid","attemptid","quizdata","region","ttslanguage","quizcontainer","quizitemscontainer","quizresultscontainer","courseurl","reattempturl","decodeURIComponent","replace","activityurl","backtocourse","stt_guided","wwwroot","useanimatecss","showqreview","this","token","owner","prepare_html","init_questions","register_events","start_quiz","on_complete","quizfinished","dd","each","index","item","type","qtype_multichoice","clone","qtype_multiaudio","qtype_page","qtype_shortanswer","qtype_listeninggapfill","qtype_typinggapfill","qtype_speakinggapfill","qtype_freespeaking","qtype_freewriting","that","fetch_polly_url","data","then","audiourl","attr","on","render_quiz_progress","current","total","array","i","push","html","linestyles","slice","length","forEach","do_next","stepdata","currentquizdataindex","currentitem","preview","report_step_grade","theoldquestion","uniqueid","prop","call","methodname","args","async","jsonresults","results","JSON","parse","render","js","show","hide","runTemplateJS","nextindex","nextitem","qtype_speechcards","qtype_dictation","qtype_dictationchat","qtype_listenrepeat","qtype_smartframe","qtype_spacegame","qtype_fluency","qtype_passagereading","qtype_buttonquiz","qtype_conversation","qtype_compquiz","ttsquestionplayer","setTimeout","play","remove","ret","step","stringify","onSubmit","alert","mobile_user","test","navigator","userAgent","chrome_user","use_ttrecorder","is_stt_guided","count_words","transcript","trim","split","filter","word","similarity","s1","s2","longer","shorter","longerLength","editDistance","parseFloat","toLowerCase","costs","lastValue","j","newValue","charAt","Math","min","cleanText","text","checkByPhonetic","passage","passagephonetic","language","comparePassageToTranscript","evaluateTranscript","itemid"],"mappings":"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"}