{"version":3,"file":"duplicateitemhelper.min.js","sources":["../src/duplicateitemhelper.js"],"sourcesContent":["/**\r\n * Add a modal to manage question adding and editing to the page.\r\n *\r\n * @module     mod_readaloud/duplicateitemhelper\r\n * @class      duplicateitemhelper\r\n * @package    mod_readaloud\r\n * @copyright  2020 Justin Hunt <poodllsupport@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/log','core/str', 'core/ajax'],\r\n    function($, log,Str, Ajax) {\r\n\r\n        /**\r\n         * Constructor\r\n         *\r\n         * @param {String} selector used to find triggers for the new group modal.\r\n         * @param {int} contextid\r\n         * @param {String} formname The key/name of the form for this instance\r\n         * @param {Object} callback The function to call after successful deletion (for UI updates)\r\n         *\r\n         * Each call to init gets it's own instance of this class.\r\n         */\r\n        var TheForm = function(selector, contextid, callback) {\r\n            this.contextid = contextid;\r\n            this.callback = callback;\r\n\r\n            //this will init on item click (better for lots of items)\r\n            this.init(selector);\r\n        };\r\n\r\n        /**\r\n         * @var {int} contextid\r\n         * @private\r\n         */\r\n        TheForm.prototype.contextid = -1;\r\n\r\n        /**\r\n         * @var {int} itemid\r\n         * @private\r\n         */\r\n        TheForm.prototype.itemid = -1;\r\n\r\n        TheForm.prototype.direction = 'none';\r\n\r\n\r\n\r\n        /**\r\n         * Initialise the class.\r\n         *\r\n         * @param {String} selector used to find triggers for the new group modal.\r\n         * @private\r\n         * @return {Promise}\r\n         */\r\n        TheForm.prototype.init = function(selector) {\r\n\r\n            var dd=this;\r\n\r\n            $('body').on('click',selector,function(e) {\r\n                //prevent it doing a real click (which will do the non ajax version of a click)\r\n                e.preventDefault();\r\n                dd.itemid=$(this).data('id');\r\n\r\n                // Now we can continue...\r\n                Ajax.call([{\r\n                    methodname: 'mod_readaloud_duplicate_item',\r\n                    args: {contextid: dd.contextid, itemid: dd.itemid},\r\n                    done: dd.callback\r\n                }]);\r\n\r\n\r\n            });//end of on click\r\n\r\n        };\r\n\r\n        return /** @alias module:mod_readaloud/modalformhelper */ {\r\n            // Public variables and functions.\r\n            /**\r\n             * Attach event listeners to initialise this module.\r\n             *\r\n             * @method init\r\n             * @param {string} selector The CSS selector used to find nodes that will trigger this module.\r\n             * @param {int} contextid The contextid for the course.\r\n             * @param {function} callback The callback.\r\n             * @return {Promise}\r\n             */\r\n            init: function(selector, contextid, callback) {\r\n                return new TheForm(selector, contextid, callback);\r\n            }\r\n        };\r\n    });"],"names":["define","$","log","Str","Ajax","TheForm","selector","contextid","callback","init","prototype","itemid","direction","dd","this","on","e","preventDefault","data","call","methodname","args","done"],"mappings":";;;;;;;;;AASAA,2CAAO,CAAC,SAAU,WAAW,WAAY,cACrC,SAASC,EAAGC,IAAIC,IAAKC,UAYbC,QAAU,SAASC,SAAUC,UAAWC,eACnCD,UAAYA,eACZC,SAAWA,cAGXC,KAAKH,kBAOdD,QAAQK,UAAUH,WAAa,EAM/BF,QAAQK,UAAUC,QAAU,EAE5BN,QAAQK,UAAUE,UAAY,OAW9BP,QAAQK,UAAUD,KAAO,SAASH,cAE1BO,GAAGC,KAEPb,EAAE,QAAQc,GAAG,QAAQT,UAAS,SAASU,GAEnCA,EAAEC,iBACFJ,GAAGF,OAAOV,EAAEa,MAAMI,KAAK,MAGvBd,KAAKe,KAAK,CAAC,CACPC,WAAY,+BACZC,KAAM,CAACd,UAAWM,GAAGN,UAAWI,OAAQE,GAAGF,QAC3CW,KAAMT,GAAGL,gBAQqC,CAWtDC,KAAM,SAASH,SAAUC,UAAWC,iBACzB,IAAIH,QAAQC,SAAUC,UAAWC"}