{"version":3,"file":"timer.min.js","sources":["../src/timer.js"],"sourcesContent":["/* jshint ignore:start */\r\ndefine(['jquery', 'core/log'], function ($, log) {\r\n\r\n    \"use strict\"; // jshint ;_;\r\n\r\n    log.debug('Timer: initialising');\r\n\r\n    return {\r\n        increment: 1,\r\n        initseconds: 0,\r\n        seconds: 0,\r\n        finalseconds: 0,\r\n        intervalhandle: null,\r\n        callback: null,\r\n        enabled: false,\r\n\r\n        //for making multiple instances\r\n        clone: function () {\r\n            return $.extend(true, {}, this);\r\n        },\r\n\r\n        init: function (initseconds, callback) {\r\n            log.debug(\"3 initseconds:\" + initseconds);\r\n            this.initseconds = parseInt(initseconds);\r\n            this.seconds = parseInt(initseconds);\r\n            this.callback = callback;\r\n            this.enabled = true;\r\n        },\r\n\r\n        start: function () {\r\n            if (!this.enabled) {\r\n                return;\r\n            }\r\n\r\n            var self = this;\r\n            this.finalseconds = 0;\r\n            if (this.initseconds > 0) {\r\n                this.increment = -1;\r\n            } else {\r\n                this.increment = 1;\r\n            }\r\n            this.intervalhandle = this.customSetInterval(function () {\r\n                self.seconds = self.seconds + self.increment;\r\n                self.finalseconds = self.finalseconds + 1;\r\n                self.callback();\r\n            }, 1000);\r\n        },\r\n\r\n        //we use a custom set interval which self adjusts for inaccuracies.\r\n        customSetInterval: function (func, time) {\r\n            var lastTime = Date.now(),\r\n                lastDelay = time,\r\n                outp = {};\r\n\r\n            function tick() {\r\n                var now = Date.now(),\r\n                    dTime = now - lastTime;\r\n\r\n                lastTime = now;\r\n                lastDelay = time + lastDelay - dTime;\r\n                outp.id = setTimeout(tick, lastDelay);\r\n                func();\r\n\r\n            }\r\n\r\n            outp.id = setTimeout(tick, time);\r\n            return outp;\r\n        },\r\n\r\n        disable: function () {\r\n            this.enabled = false;\r\n        },\r\n\r\n        enable: function () {\r\n            this.enabled = true;\r\n        },\r\n\r\n        fetch_display_time: function (someseconds) {\r\n            if (!someseconds) {\r\n                someseconds = this.seconds;\r\n            }\r\n            var theHours = '00' + parseInt(someseconds / 3600);\r\n            theHours = theHours.substr(theHours.length - 2, 2);\r\n            var theMinutes = '00' + parseInt(someseconds / 60);\r\n            theMinutes = theMinutes.substr(theMinutes.length - 2, 2);\r\n            var theSeconds = '00' + parseInt(someseconds % 60);\r\n            theSeconds = theSeconds.substr(theSeconds.length - 2, 2);\r\n            var display_time = theHours + ':' + theMinutes + ':' + theSeconds;\r\n            return display_time;\r\n        },\r\n\r\n        stop: function () {\r\n            clearTimeout(this.intervalhandle.id);\r\n        },\r\n\r\n        reset: function () {\r\n            this.seconds = this.initseconds;\r\n        },\r\n\r\n        pause: function () {\r\n            this.increment = 0;\r\n        },\r\n        resume: function () {\r\n            if (this.initseconds > 0) {\r\n                this.increment = -1;\r\n            } else {\r\n                this.increment = 1;\r\n            }\r\n        }\r\n\r\n    };//end of returned object\r\n});//total end\r\n"],"names":["define","$","log","debug","increment","initseconds","seconds","finalseconds","intervalhandle","callback","enabled","clone","extend","this","init","parseInt","start","self","customSetInterval","func","time","lastTime","Date","now","lastDelay","outp","id","setTimeout","tick","dTime","disable","enable","fetch_display_time","someseconds","theHours","substr","length","theMinutes","theSeconds","stop","clearTimeout","reset","pause","resume"],"mappings":"AACAA,6BAAO,CAAC,SAAU,aAAa,SAAUC,EAAGC,YAIxCA,IAAIC,MAAM,uBAEH,CACHC,UAAW,EACXC,YAAa,EACbC,QAAS,EACTC,aAAc,EACdC,eAAgB,KAChBC,SAAU,KACVC,SAAS,EAGTC,MAAO,kBACIV,EAAEW,QAAO,EAAM,GAAIC,OAG9BC,KAAM,SAAUT,YAAaI,UACzBP,IAAIC,MAAM,iBAAmBE,kBACxBA,YAAcU,SAASV,kBACvBC,QAAUS,SAASV,kBACnBI,SAAWA,cACXC,SAAU,GAGnBM,MAAO,cACEH,KAAKH,aAINO,KAAOJ,UACNN,aAAe,EAChBM,KAAKR,YAAc,OACdD,WAAa,OAEbA,UAAY,OAEhBI,eAAiBK,KAAKK,mBAAkB,WACzCD,KAAKX,QAAUW,KAAKX,QAAUW,KAAKb,UACnCa,KAAKV,aAAeU,KAAKV,aAAe,EACxCU,KAAKR,aACN,OAIPS,kBAAmB,SAAUC,KAAMC,UAC3BC,SAAWC,KAAKC,MAChBC,UAAYJ,KACZK,KAAO,UAaXA,KAAKC,GAAKC,qBAXDC,WACDL,IAAMD,KAAKC,MACXM,MAAQN,IAAMF,SAElBA,SAAWE,IACXC,UAAYJ,KAAOI,UAAYK,MAC/BJ,KAAKC,GAAKC,WAAWC,KAAMJ,WAC3BL,SAIuBC,MACpBK,MAGXK,QAAS,gBACApB,SAAU,GAGnBqB,OAAQ,gBACCrB,SAAU,GAGnBsB,mBAAoB,SAAUC,aACrBA,cACDA,YAAcpB,KAAKP,aAEnB4B,SAAW,KAAOnB,SAASkB,YAAc,MAC7CC,SAAWA,SAASC,OAAOD,SAASE,OAAS,EAAG,OAC5CC,WAAa,KAAOtB,SAASkB,YAAc,IAC/CI,WAAaA,WAAWF,OAAOE,WAAWD,OAAS,EAAG,OAClDE,WAAa,KAAOvB,SAASkB,YAAc,WAE5BC,SAAW,IAAMG,WAAa,KADjDC,WAAaA,WAAWH,OAAOG,WAAWF,OAAS,EAAG,KAK1DG,KAAM,WACFC,aAAa3B,KAAKL,eAAekB,KAGrCe,MAAO,gBACEnC,QAAUO,KAAKR,aAGxBqC,MAAO,gBACEtC,UAAY,GAErBuC,OAAQ,WACA9B,KAAKR,YAAc,OACdD,WAAa,OAEbA,UAAY"}